{"version":3,"sources":["pages/Games/Games.module.css","pages/Main/Main.module.css","components/PossibleAnswer/possibleAnswer.module.css","components/GameResultsItem/gameResultsItem.module.css","components/GameResults/gameResults.module.css","components/EndGame/endGame.module.css","pages/Dictionary/dictionary.module.css","components/GameOptions/GameOptions.module.css","components/GameDescription/gameDescription.module.css","components/GameDescriptionSprinter/gameDescription.module.css","components/Sprinter/sprinter.module.scss","pages/Statistics/statistics.module.css","types.ts","assets/icons/logo.svg","features/auth/authSlice.ts","components/InlineSpinner/index.tsx","features/settings/settingsSlice.ts","components/Header/Header.tsx","constants/authors.ts","assets/icons/rs_school_js.svg","components/Footer/Footer.tsx","components/FigureItem/FigureItem.tsx","constants/games.ts","utils/getRandom.ts","utils/getRandomArray.ts","utils/createWordsArray.ts","features/game/gameSlice.ts","components/GameOptions/GameOptions.tsx","pages/Games/Games.tsx","assets/main_screen.png","assets/icons/books.svg","assets/icons/game.svg","assets/icons/warning.svg","assets/icons/progress.svg","pages/Main/Main.tsx","assets/icons/volume.svg","features/games/gamesSlice.ts","utils/sound.ts","components/GameHeader/GameHeader.tsx","components/GameDescription/GameDescription.tsx","assets/icons/close.svg","components/GameResultsItem/GameResultsItem.tsx","components/GameResults/GameResults.tsx","utils/getDayAndMonth.ts","utils/getUniqueArray.ts","components/EndGame/EndGame.tsx","assets/icons/yes.svg","assets/icons/no.svg","components/PossibleAnswer/PossibleAnswer.tsx","components/ScrollToTopOnMount/ScrollToTopOnMount.tsx","components/AudioCallGame/AudioCallGame.tsx","components/Progress/Progress.tsx","components/Savannah/Savannah.tsx","components/GameHeaderSprinter/GameHeaderSprinter.tsx","utils/createArrayEnWords.ts","components/AudioPlayer/AudioPlayer.tsx","components/GameDescriptionSprinter/GameDescriptionSprinter.tsx","components/Sprinter/Sprinter.tsx","utils/createRandomArrRuWords.ts","components/OurGame/OurGame.tsx","components/PreStartInfo/PreStartInfo.tsx","assets/photo/1.jpg","assets/photo/2.jpg","assets/photo/3.jpg","pages/About/About.tsx","pages/NotFound/NotFound.tsx","constants/textbook.ts","pages/Textbook/index.tsx","hooks/index.ts","api/index.ts","pages/Group/components/SoundButton.tsx","pages/Group/components/WordCards.tsx","pages/Group/components/WordControls.tsx","pages/Group/components/WordCard.tsx","pages/Group/components/Pagination.tsx","pages/Group/index.tsx","features/counter/counterSlice.ts","features/counter/Counter.tsx","features/words/wordsSlice.ts","features/words/Words.tsx","components/AuthModal/components/LoginForm.tsx","assets/statistics.png","components/StatisticsBarChart/StatisticsBarChart.tsx","components/StatisticsLineChart/StatisticsLineChart.tsx","utils/getNoun.ts","features/statistics/statisticsSlice.ts","pages/Statistics/Statistics.tsx","assets/dictionary.png","components/DictionarySection/DictionarySection.tsx","pages/Dictionary/Dictionary.tsx","components/AuthModal/components/RegisterForm.tsx","components/AuthModal/index.tsx","App.tsx","constants/tokenExpireTime.ts","app/store.ts","serviceWorker.ts","components/ScrollToTop/ScrollToTop.tsx","index.tsx","components/Header/header.module.css","components/Footer/Footer.module.css","components/AudioCallGame/AudioCallGame.module.css","components/Savannah/savannah.module.css","components/OurGame/ourGame.module.scss","features/counter/Counter.module.css","components/GameHeader/GameHeader.module.css","components/GameHeaderSprinter/GameHeader.module.css","components/PreStartInfo/preStartInfo.module.scss"],"names":["module","exports","Status","StorageKey","Difficulty","DictionaryType","initialState","status","Idle","data","error","undefined","loginUser","createAsyncThunk","a","email","password","axios","post","response","authSlice","createSlice","name","reducers","setAuthData","state","action","Succeeded","payload","setAuthorizedStatus","Authorized","extraReducers","builder","addCase","pending","Loading","fulfilled","rejected","Failed","message","actions","selectAuthStatus","auth","selectAuthData","InlineSpinner","size","style","width","height","verticalAlign","className","role","aria-hidden","defaultProps","optional","showTranslations","showControls","fetchSettings","_","getState","rootState","userId","get","updateSettings","settings","Error","put","wordsPerDay","selectSettingsData","settingsSlice","imgStyle","marginRight","Header","props","authButton","openAuthModal","dispatch","useDispatch","useState","userData","setUserData","isLoggingOut","setIsLoggingOut","authStatus","useSelector","authData","settingsData","currentSettings","React","expanded","setExpanded","isSettings","setIsSettings","userDataFromServer","photoUrl","photo_url","popover","Popover","id","Title","as","Content","Image","src","rounded","Button","disabled","onClick","localStorage","removeItem","AuthTime","Auth","setTimeout","variant","OverlayTrigger","trigger","placement","overlay","useEffect","fetchAndSetUserData","e","test","window","location","href","styles","container","Navbar","collapseOnSelect","expand","Brand","to","logo","logoImg","fluid","Nav","Link","img","Item","NavDropdown","title","menuItems","ok","no","Divider","Toggle","aria-controls","prevState","Collapse","header_menu","justify","AUTHORS","github","Footer","color","Container","Row","Col","flex","lg","md","sm","xs","link","rs_school","alt","bold","map","author","right","textStyle","fontSize","FigureItem","text","Figure","Caption","games","nameRU","description","volume","groups","endGame","ENTER_CODE","ARROW_CODE","GAME_ANSWERS_CODES","getRandom","number","Math","floor","random","getRandomArray","arrayLength","quantity","randomArray","length","newRandomArrayElement","includes","index","indexOf","splice","unshift","createGameArray","originArray","arrayOfIndices","indexNumber","createWordsArray","playWordIndex","newIndex","createIndiciesArrayWithPlayWordIndex","gameSlice","isGameOpenFromTextBook","currentLevel","originWordsArray","currentWordIndex","currentWord","playWordsArray","isPlaying","wrongAnswers","correctAnswers","isGameEnd","isLoading","attempts","currentGame","gameLearnedWords","setOriginWordsArray","newArrayOfIndices","word","setPlayWordsArray","newPlayWordsArray","setCurrentWord","setCurrentWordIndex","setIsPlaying","pushCorrectAnswers","push","pushWrongAnswers","pop","setIsGameEnd","setInitSettings","setInitSettingsFromBook","setIsLoading","setIsGameOpenFromTextBook","setCurrentLevel","setCurrentGame","playWords","game","playWord","select","backgroundColor","borderColor","cursor","boxShadow","outline","option","GameOptions","gameName","currentLvlForGame","level","setLevel","getItem","newValue","setItem","Form","Group","controlId","Control","value","onChange","event","target","custom","item","objectFit","Games","margin","Card","card","toUpperCase","Img","Body","Text","dangerouslySetInnerHTML","__html","gameBtn","Main","main","mainScreenImg","booksImg","gameImg","warningImg","progressImg","soundsVolume","gamesSlice","setSoundsVolume","sound","audio","playSound","path","Audio","playPromise","play","then","onended","pause","catch","alert","console","log","gameHeaderStyle","heartStyle","keyboard","GameHeader","soundVolume","gameRef","isKeyboardActive","isFullScreen","setIsFullScreen","arrayAttempts","current","requestFullscreen","document","fullscreenElement","exitFullscreen","toString","left","tabIndex","center","isFullscreen","GameDescription","gameCheck","GameResultsItem","answer","volumeImg","soundUrl","process","wordTranslate","GameResults","isGameOpenFromBook","closeImg","wrong","correct","getDayAndMonth","Date","toLocaleString","day","month","getUniqueArray","array","reduce","res","EndGame","isDataPutInLocalStorage","setIsDataPutInLocalStorage","wrongAnswersArr","correctAnswersArr","currentGameNameEng","learnedWordsFromGame","isShowResult","setIsShowResult","currentGameName","today","gameData","words","countCorrectAnswers","longestSeriesCorrectAnswers","serializedStatistics","Statistics","statistics","JSON","parse","date","filter","allThisGameLearnedWords","longest","countAllCorrectAnswers","newGameData","stringify","allLearnedWords","flat","learnedWords","oldData","newData","response2","PossibleAnswer","isShowAnswer","setIsShowAnswer","isNewGroupWords","setIsNewGroupWords","isFirstClick","setIsFirstClick","pressedKeyboardKey","isCorrectAnswer","setIsCorrectAnswer","isWrongAnswer","setIsWrongAnswer","onSomeWordClick","button","noImg","yesImg","ScrollToTopOnMount","scrollTo","fontWeight","gameField","minHeight","root","padding","AudioCallGame","useRef","isAudioCallGameEnd","setPressedKeyboardKey","setIsKeyboardActive","onSoundImgClick","onDontKnowBtnClick","onNextBtnClick","ref","onKeyDown","key","handlerOnKeyDown","onFocus","onBlur","heightWordImg","image","Progress","now","max","stopGame","time","setTime","setColor","interval","timeDanger","clearTimeout","ProgressBar","Savannah","isSavannahGameEnd","visualTimer","GameHeaderSprinter","isMuteSound","setIsMuteSound","isMute","setIsMute","createArrayEnAndRUWords","wordList","resultRu","resultEn","AudioPlayer","playing","format","loop","mute","preload","html5","GameDescriptionSprinter","Sprinter","isEnd","randomArrayWords","result","randomHalfWordList","indexRandomHalf","i","randomIndex","createRandomArrRuWords","arrayEnWords","arrayRuWords","isTrueWord","setIsTrueWord","ruWorsIndex","setRuWordIndex","enWorsIndex","setEnWordIndex","score","setSetScore","answerTrueCount","setAnswerTrueCount","disable","setDisable","setPlaySound","audioUrl","setAudioUrl","borderGame","border","setBorder","iconNoVisible","opasity","setOpasity","opasityWord","setOpasityWord","iconRef","contentRef","muteRef","nextWord","showIcon","opacity","compareResults","trueAnswer","borderTrue","iconVisible","borderFalse","handlePlaySong","onKeypress","addEventListener","removeEventListener","isSound","useMemo","sprinter","header","info","content","enWord","ruWord","ruWordVisible","ruWordNoVisible","iconWord","iconTrue","iconFalse","answerBtn","buttonFullScreen","paddin","OurGame","isNewGameEnd","textWithCurrentWord","currentWordText","currentWordInOffer","currentWordWithTag","textExample","match","slice","currentWordTextArr","split","wordCorrectly","wordNoCorrectly","heightImg","PreStartInfo","isGamePlaying","isDataLoading","currentGameLevel","originWords","gameNameReverse","reverse","join","indexGame","setIndexGame","newVolume","parseFloat","group","randomPage","Spinner","animation","spinner","background","startBtn","marginBottom","About","photoImg1","photoImg2","photoImg3","marginTop","NotFound","useLocation","pathname","COLORS","Textbook","groupCards","useRequest","fetch","dependencies","setData","setError","setStatus","fetchAndSetData","fetchedData","run","fetchWords","page","params","fetchUserAggregatedWords","wordsPerPage","paginatedResults","SoundButton","iconSize","soundPath","WordActionType","createUserWord","wordId","userWord","updateUserWord","WordControls","controls","addHardWordLabel","deleteWordFromList","dictionaryType","isAddingToHardWords","setIsAddingToHardWords","isDeletingFromList","setIsDeletingFromList","isRestoring","setIsRestoring","inlineSpinner","isMounted","Difficult","newUserWord","difficulty","Easy","Deleted","isDeleted","Hard","WordCard","wordData","transcription","textMeaning","textMeaningTranslate","textExampleTranslate","audioMeaning","audioExample","difficultWordlabel","aggregatedWordsReducer","type","SET_AGGREGATED_WORDS","DELETE_WORD_FROM_LIST","indexToDelete","findIndex","userAggregatedWord","_id","foundWord","deletedWord","isRestored","ADD_HARD_WORD_LABEL","indexToUpdate","updatedWord","WordCards","wordsData","userAggregatedWordsData","useReducer","aggregatedWords","dispatchWordAction","activeWords","wordsAcc","find","cardElements","activeWord","Pagination","onPreviousClick","onNextClick","displayedPageNumber","currentPage","groupId","pageCount","storageKey","storedPage","initialPage","Number","setCurrentPage","String","openNextPage","openPreviousPage","usePagination","GroupPageIndex","bind","wordsStatus","wordsError","userAggregatedWordsStatus","userAggregatedWordsError","entityStatuses","isLoadingSomeData","some","hasSomeError","hasLoadedAllData","every","currentWords","counterSlice","increment","decrement","incrementByAmount","selectCount","counter","Counter","count","incrementAmount","setIncrementAmount","row","aria-label","textbox","asyncButton","amount","selectWordsStatus","selectWordsError","selectWordsData","wordsSlice","Words","wordFields","textAlign","FieldName","barColors","top","bottom","StatisticsBarChart","chartData","ResponsiveContainer","BarChart","XAxis","dataKey","stroke","Bar","barSize","fill","strokeWidth","LabelList","position","Cell","wrapper","CustomTooltip","active","label","StatisticsLineChart","LineChart","Line","CartesianGrid","strokeDasharray","minTickGap","YAxis","hide","Tooltip","wrapperStyle","Brush","getNoun","one","few","many","n","abs","statisticsSlice","seriesCorrectAnswers","wordsPerDayArr","increaseWordsPerDayArr","setLongTermStatistics","Object","keys","sum","increaseWordsPerDay","setStatistics","dataFromLocalStorage","learnedWordsArr","percent","round","sumAllPercents","gamesCount","commonPercent","seriesAnswers","learnedWordsData","correctAnswersData","seriesCorrectAnswersData","increaseLearnedWords","fetchStatistics","statisticsImg","first","DictionarySection","url","Dictionary","dictionaryImg","LoginForm","closeAuthModal","isSubmittable","setIsSubmittable","isLoginSuccessful","setIsLoginSuccessful","preventDefault","form","values","acc","fieldName","loginRes","Alert","onSubmit","Label","placeholder","Email","Password","RegisterForm","openLogin","validated","setValidated","submittable","setSubmittable","submittedData","setSubmittedData","checkValidity","stopPropagation","photoField","Photo","files","PasswordConfirm","uploadFile","formData","FormData","append","photoRes","registerRes","Badge","noValidate","required","Username","pattern","Modal","TAB_NAMES","AuthModal","show","currentTab","setCurrentTab","onHide","closeButton","Tabs","defaultActiveKey","activeKey","onSelect","k","Tab","eventKey","App","authShown","setAuthShown","correctlyAnsweredWords","wronglyAnsweredWords","isTokenExpired","serializedAuthTime","authTime","getTime","serializedAuthData","storedAuthData","currentTime","token","defaults","headers","common","Authorization","lastWord","repeat","incorrect","exact","component","store","configureStore","reducer","counterReducer","wordsReducer","authReducer","gamesReducer","gameReducer","statisticsReducer","settingsReducer","Boolean","hostname","ScrollToTop","baseURL","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.830279b7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Games_spinner__3FXBp\",\"yellow\":\"Games_yellow__2eu3W\",\"green\":\"Games_green__3qCqg\",\"blue\":\"Games_blue__1xMG4\",\"red\":\"Games_red__hQQrF\",\"play_img\":\"Games_play_img__2dfPA\",\"bold\":\"Games_bold__iHgGB\",\"margin\":\"Games_margin__23KPC\",\"game\":\"Games_game__3Rk30\",\"item\":\"Games_item__3Yxe8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainScreenImg\":\"Main_mainScreenImg__2gaC9\",\"color\":\"Main_color__1aYoo\",\"margin\":\"Main_margin__1OIIT\",\"games\":\"Main_games__1TxUG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"possibleAnswer_text__3S_jr\",\"color\":\"possibleAnswer_color__GUbAl\",\"word\":\"possibleAnswer_word__1pKJx\",\"button\":\"possibleAnswer_button__1xMcc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"gameResultsItem_img__3UrhV\",\"bold\":\"gameResultsItem_bold__MBSpL\",\"word\":\"gameResultsItem_word__2WvzN\",\"margin\":\"gameResultsItem_margin__1hnCr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"yellow\":\"gameResults_yellow__1ljWo\",\"green\":\"gameResults_green__1VkJj\",\"blue\":\"gameResults_blue__1qiOj\",\"red\":\"gameResults_red__3gxTi\",\"closeImg\":\"gameResults_closeImg__wVzlR\",\"correct\":\"gameResults_correct__UCmFn\",\"wrong\":\"gameResults_wrong__3oDhX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"yellow\":\"endGame_yellow__HLuqT\",\"green\":\"endGame_green__3qEz4\",\"blue\":\"endGame_blue__3Fvz6\",\"red\":\"endGame_red__3_7cu\",\"container\":\"endGame_container__1kAhd\",\"img\":\"endGame_img__3HNa9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dictionaryImg\":\"dictionary_dictionaryImg__mpNYM\",\"color\":\"dictionary_color__278Ys\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"GameOptions_container__3yTA4\",\"img\":\"GameOptions_img__hzRg6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"gameDescription_container__ewCAa\",\"img\":\"gameDescription_img__e0HLj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"gameDescription_container__lmHHs\",\"img\":\"gameDescription_img__L8eh_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sprinter\":\"sprinter_sprinter__3TzKd\",\"container\":\"sprinter_container__3ejN8\",\"info\":\"sprinter_info__2tNrp\",\"score\":\"sprinter_score__3_UCL\",\"value\":\"sprinter_value__u8fHK\",\"multipilier\":\"sprinter_multipilier__2iz9D\",\"visualTimer\":\"sprinter_visualTimer__2rrUm\",\"content\":\"sprinter_content__hNqMa\",\"pointsWords\":\"sprinter_pointsWords__3_K8d\",\"word\":\"sprinter_word__1RvZb\",\"enWord\":\"sprinter_enWord__3GUiK\",\"ruWord\":\"sprinter_ruWord__PjnEC\",\"header\":\"sprinter_header__PoP5r\",\"ruWordNoVisible\":\"sprinter_ruWordNoVisible__2JFbA\",\"ruWordVisible\":\"sprinter_ruWordVisible__1ZfG2\",\"iconWord\":\"sprinter_iconWord__62MZS\",\"iconTrue\":\"sprinter_iconTrue__w0HCR\",\"iconFalse\":\"sprinter_iconFalse__15KBh\",\"iconNoVisible\":\"sprinter_iconNoVisible__12GbY\",\"iconVisible\":\"sprinter_iconVisible__219im\",\"active\":\"sprinter_active__2VU-Y\",\"answerBtn\":\"sprinter_answerBtn__1bKIj\",\"button\":\"sprinter_button__ZhZeK\",\"buttonFullScreen\":\"sprinter_buttonFullScreen__1S1S4\",\"description\":\"sprinter_description__1Cz7-\",\"opacityToggle\":\"sprinter_opacityToggle__1uXmN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticsImg\":\"statistics_statisticsImg__3feUA\",\"first\":\"statistics_first__lr3le\",\"color\":\"statistics_color__2IOGQ\",\"container\":\"statistics_container__KuVg5\",\"margin\":\"statistics_margin__2VMUn\"};","export enum Status {\r\n  Idle = 'IDLE',\r\n  Loading = 'LOADING',\r\n  Succeeded = 'SUCCEEDED',\r\n  Failed = 'FAILED',\r\n  Authorized = 'AUTHORIZED',\r\n}\r\n\r\nexport enum StorageKey {\r\n  Auth = 'auth',\r\n  Statistics = 'statistics',\r\n  AuthTime = 'auth_time',\r\n  GroupPageIndex = 'group_page_index',\r\n}\r\n\r\nexport interface EntityState<T> {\r\n  status: Status;\r\n  data: T | null;\r\n  error: string | undefined;\r\n}\r\n\r\nexport interface Word {\r\n  id: string;\r\n  group: number;\r\n  page: number;\r\n  word: string;\r\n  image: string;\r\n  audio: string;\r\n  audioMeaning: string;\r\n  audioExample: string;\r\n  textMeaning: string;\r\n  textExample: string;\r\n  transcription: string;\r\n  textExampleTranslate: string;\r\n  textMeaningTranslate: string;\r\n  wordTranslate: string;\r\n}\r\n\r\nexport enum Difficulty {\r\n  Easy = 'EASY',\r\n  Hard = 'HARD',\r\n}\r\n\r\nexport interface UserWord {\r\n  difficulty?: Difficulty;\r\n  optional?: {\r\n    isDeleted: boolean;\r\n    isRestored?: boolean;\r\n  };\r\n}\r\n\r\nexport interface UserAggregatedWord extends Word {\r\n  _id: string;\r\n  userWord: UserWord;\r\n}\r\n\r\nexport interface Settings {\r\n  showTranslations: boolean;\r\n  showControls: boolean;\r\n}\r\n\r\nexport enum DictionaryType {\r\n  Difficult = 'difficult',\r\n  Learned = 'learned',\r\n  Deleted = 'deleted',\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.adcfec57.svg\";","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nimport { RootState } from '../../app/store';\r\nimport { EntityState, Status } from '../../types';\r\n\r\nexport interface Auth {\r\n  token: string;\r\n  refreshToken: string;\r\n  userId: string;\r\n  name: string;\r\n}\r\n\r\nexport type AuthState = EntityState<Auth>;\r\n\r\nconst initialState: AuthState = {\r\n  status: Status.Idle,\r\n  data: null,\r\n  error: undefined,\r\n};\r\n\r\nexport const loginUser = createAsyncThunk(\r\n  'auth/loginUser',\r\n  async ({ email, password }: { email: string; password: string }) => {\r\n    const response = await axios.post('/signin', {\r\n      email,\r\n      password,\r\n    });\r\n    return response.data;\r\n  },\r\n);\r\n\r\nexport const authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    setAuthData: (state, action) => {\r\n      state.status = Status.Succeeded;\r\n      state.data = action.payload;\r\n    },\r\n    setAuthorizedStatus: (state) => {\r\n      state.status = Status.Authorized;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(loginUser.pending, (state) => {\r\n      state.status = Status.Loading;\r\n    });\r\n    builder.addCase(loginUser.fulfilled, (state, { payload }) => {\r\n      state.status = Status.Succeeded;\r\n      state.data = payload;\r\n    });\r\n    builder.addCase(loginUser.rejected, (state, { error }) => {\r\n      state.status = Status.Failed;\r\n      state.error = error.message;\r\n    });\r\n  },\r\n});\r\n\r\nexport const { setAuthData, setAuthorizedStatus } = authSlice.actions;\r\n\r\nexport function selectAuthStatus(state: RootState): AuthState['status'] {\r\n  return state.auth.status;\r\n}\r\n\r\nexport function selectAuthError(state: RootState): AuthState['error'] {\r\n  return state.auth.error;\r\n}\r\n\r\nexport function selectAuthData(state: RootState): AuthState['data'] {\r\n  return state.auth.data;\r\n}\r\n\r\nexport default authSlice.reducer;\r\n","import React from 'react';\r\n\r\nfunction InlineSpinner({ size }: { size?: string | number }): JSX.Element {\r\n  return (\r\n    <span\r\n      style={{ width: size || '.8rem', height: size || '.8rem', verticalAlign: 'middle' }}\r\n      className=\"spinner-border spinner-border-sm\"\r\n      role=\"status\"\r\n      aria-hidden=\"true\"\r\n    />\r\n  );\r\n}\r\n\r\nInlineSpinner.defaultProps = {\r\n  size: '1rem',\r\n};\r\n\r\nexport default InlineSpinner;\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nimport { RootState } from '../../app/store';\r\nimport { EntityState, Status, Settings } from '../../types';\r\n\r\ninterface SettingsResponse {\r\n  id?: string;\r\n  optional: Settings;\r\n  wordsPerDay?: string;\r\n}\r\n\r\nexport type SettingsState = EntityState<SettingsResponse>;\r\n\r\nconst initialState: SettingsState = {\r\n  status: Status.Idle,\r\n  data: {\r\n    optional: {\r\n      showTranslations: true,\r\n      showControls: true,\r\n    },\r\n  },\r\n  error: undefined,\r\n};\r\n\r\nexport const fetchSettings = createAsyncThunk('settings/fetchSettings', async (_, { getState }) => {\r\n  const rootState = getState() as RootState;\r\n  const userId = rootState.auth.data?.userId;\r\n  const response = await axios.get(`/users/${userId}/settings`);\r\n  return response.data;\r\n});\r\n\r\nexport const updateSettings = createAsyncThunk(\r\n  'settings/updateSettings',\r\n  async ({ settings }: { settings: Settings }, { getState }) => {\r\n    const rootState = getState() as RootState;\r\n    const userId = rootState.auth.data?.userId;\r\n    if (!userId) {\r\n      throw new Error('User does not exist yet');\r\n    }\r\n    const response = await axios.put(`/users/${userId}/settings`, {\r\n      wordsPerDay: 1,\r\n      optional: settings,\r\n    });\r\n    return response.data;\r\n  },\r\n);\r\n\r\nexport const settingsSlice = createSlice({\r\n  name: 'settings',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchSettings.pending, (state) => {\r\n      state.status = Status.Loading;\r\n    });\r\n    builder.addCase(fetchSettings.fulfilled, (state, { payload }) => {\r\n      state.status = Status.Succeeded;\r\n      state.data = payload;\r\n    });\r\n    builder.addCase(fetchSettings.rejected, (state, { error }) => {\r\n      state.status = Status.Failed;\r\n      state.error = error.message;\r\n    });\r\n    builder.addCase(updateSettings.pending, (state) => {\r\n      state.status = Status.Loading;\r\n    });\r\n    builder.addCase(updateSettings.fulfilled, (state, { payload }) => {\r\n      state.status = Status.Succeeded;\r\n      state.data = payload;\r\n    });\r\n    builder.addCase(updateSettings.rejected, (state, { error }) => {\r\n      state.status = Status.Failed;\r\n      state.error = error.message;\r\n    });\r\n  },\r\n});\r\n\r\nexport function selectSettingsStatus(state: RootState): SettingsState['status'] {\r\n  return state.settings.status;\r\n}\r\n\r\nexport function selectSettingsError(state: RootState): SettingsState['error'] {\r\n  return state.settings.error;\r\n}\r\n\r\nexport function selectSettingsData(state: RootState): SettingsState['data'] {\r\n  return state.settings.data;\r\n}\r\n\r\nexport default settingsSlice.reducer;\r\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Nav, Image, Navbar, NavDropdown, OverlayTrigger, Popover, Button } from 'react-bootstrap';\r\nimport { BookmarkXFill, BookmarkCheckFill, BoxArrowInRight, PersonCheck, ArrowRepeat } from 'react-bootstrap-icons';\r\nimport axios from 'axios';\r\nimport logoImg from '../../assets/icons/logo.svg';\r\nimport { selectAuthData, selectAuthStatus, setAuthData } from '../../features/auth/authSlice';\r\nimport InlineSpinner from '../InlineSpinner';\r\nimport { Status, StorageKey } from '../../types';\r\nimport styles from './header.module.css';\r\nimport { selectSettingsData, updateSettings } from '../../features/settings/settingsSlice';\r\n\r\nconst imgStyle = {\r\n  marginRight: '10px',\r\n};\r\n\r\ninterface Props {\r\n  openAuthModal: () => void;\r\n}\r\n\r\ninterface UserData {\r\n  email: string;\r\n  photo_url: string;\r\n}\r\n\r\nconst Header = (props: Props): JSX.Element => {\r\n  const { openAuthModal } = props;\r\n  const dispatch = useDispatch();\r\n  const [userData, setUserData] = useState<UserData | null>(null);\r\n  const [isLoggingOut, setIsLoggingOut] = useState(false);\r\n  const authStatus = useSelector(selectAuthStatus);\r\n  const authData = useSelector(selectAuthData);\r\n  const settingsData = useSelector(selectSettingsData);\r\n  const currentSettings = settingsData?.optional;\r\n\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const [isSettings, setIsSettings] = React.useState(false);\r\n\r\n  const handleToggle = () => {\r\n    setExpanded((prevState) => !prevState);\r\n  };\r\n  async function fetchAndSetUserData() {\r\n    const userDataFromServer = await axios.get(`/users/${authData?.userId}`);\r\n    if (!userDataFromServer?.data) {\r\n      throw new Error('Недействительный пользователь');\r\n    }\r\n    setUserData(userDataFromServer.data);\r\n  }\r\n\r\n  function logoutUser() {\r\n    setIsLoggingOut(true);\r\n    dispatch(setAuthData(null));\r\n    localStorage.removeItem(StorageKey.AuthTime);\r\n    localStorage.removeItem(StorageKey.Auth);\r\n    setTimeout(() => setIsLoggingOut(false), 3000);\r\n  }\r\n\r\n  let authButton;\r\n  if (userData) {\r\n    const { email, photo_url: photoUrl } = userData;\r\n    const popover = (\r\n      <Popover id=\"popover-basic\">\r\n        <Popover.Title as=\"h3\">{email}</Popover.Title>\r\n        <Popover.Content>\r\n          <Image className=\"mb-2\" width={200} src={photoUrl} rounded />\r\n          <Button disabled={isLoggingOut} onClick={logoutUser} variant=\"outline-info\">\r\n            {isLoggingOut && <InlineSpinner />}\r\n            &nbsp; Разавторизовать\r\n          </Button>\r\n        </Popover.Content>\r\n      </Popover>\r\n    );\r\n    authButton = (\r\n      <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={popover}>\r\n        <PersonCheck size={20} />\r\n      </OverlayTrigger>\r\n    );\r\n  } else if (authData) {\r\n    authButton = <ArrowRepeat size={20} />;\r\n  } else {\r\n    authButton = <BoxArrowInRight size={20} onClick={openAuthModal} />;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (authStatus === Status.Authorized && authData?.userId) {\r\n      try {\r\n        fetchAndSetUserData();\r\n      } catch (e) {\r\n        setUserData(null);\r\n      }\r\n    } else {\r\n      setUserData(null);\r\n    }\r\n  }, [authStatus, authData]);\r\n\r\n  React.useEffect(() => {\r\n    const isTextBook: boolean = /textbook|group/.test(window.location.href);\r\n    if (isTextBook) setIsSettings(true);\r\n  }, []);\r\n  return (\r\n    <div className={styles.container}>\r\n      <Navbar collapseOnSelect expand=\"md\" expanded={expanded} variant=\"light\">\r\n        <Navbar.Brand>\r\n          <NavLink to=\"/\">\r\n            <div className={styles.logo}>\r\n              <Image width=\"45\" height=\"auto\" src={logoImg} fluid />\r\n            </div>\r\n          </NavLink>\r\n        </Navbar.Brand>\r\n        <Nav.Link>\r\n          <div style={{ ...imgStyle, width: 20, height: 'auto' }} className={styles.img}>\r\n            {authButton}\r\n          </div>\r\n        </Nav.Link>\r\n        {isSettings && currentSettings && userData ? (\r\n          <Nav.Item>\r\n            <NavDropdown title=\"Настройки\" id=\"dropdown-menu-align-right\" className={styles.menuItems}>\r\n              <NavDropdown.Item>\r\n                <div\r\n                  onClick={() =>\r\n                    dispatch(\r\n                      updateSettings({\r\n                        settings: { ...currentSettings, showTranslations: !currentSettings.showTranslations },\r\n                      }),\r\n                    )\r\n                  }\r\n                >\r\n                  Перевод слова и предложений &nbsp;\r\n                  {currentSettings.showTranslations ? (\r\n                    <BookmarkCheckFill className={styles.ok} />\r\n                  ) : (\r\n                    <BookmarkXFill className={styles.no} />\r\n                  )}\r\n                </div>\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Divider />\r\n              <NavDropdown.Item>\r\n                <div\r\n                  className={styles.menuItems}\r\n                  onClick={() =>\r\n                    dispatch(\r\n                      updateSettings({\r\n                        settings: { ...currentSettings, showControls: !currentSettings.showControls },\r\n                      }),\r\n                    )\r\n                  }\r\n                >\r\n                  Кнопки &quot;Сложные слова&quot; и <br />\r\n                  &quot;Удалённые слова&quot; &nbsp;\r\n                  {currentSettings.showControls ? (\r\n                    <BookmarkCheckFill className={styles.ok} />\r\n                  ) : (\r\n                    <BookmarkXFill className={styles.no} />\r\n                  )}\r\n                </div>\r\n              </NavDropdown.Item>\r\n            </NavDropdown>\r\n          </Nav.Item>\r\n        ) : (\r\n          ''\r\n        )}\r\n\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" onClick={handleToggle} />\r\n\r\n        <Navbar.Collapse style={{ width: '100%' }}>\r\n          <Nav className={`mr-auto ${styles.header_menu}`} variant=\"pills\" justify>\r\n            <Nav.Item>\r\n              <NavLink to=\"/textbook\">\r\n                <div className={styles.menuItems} onClick={() => setIsSettings(true)}>\r\n                  Учебник\r\n                </div>\r\n              </NavLink>\r\n            </Nav.Item>\r\n            {authStatus === Status.Authorized && (\r\n              <Nav.Item>\r\n                <NavLink to=\"/dictionary\">\r\n                  <div className={styles.menuItems} onClick={() => setIsSettings(false)}>\r\n                    Словарь\r\n                  </div>\r\n                </NavLink>\r\n              </Nav.Item>\r\n            )}\r\n            <Nav.Item>\r\n              <NavLink to=\"/Games\">\r\n                <div className={styles.menuItems} onClick={() => setIsSettings(false)}>\r\n                  Игры\r\n                </div>\r\n              </NavLink>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <NavLink to=\"/statistics\">\r\n                <div className={styles.menuItems} onClick={() => setIsSettings(false)}>\r\n                  Статистика\r\n                </div>\r\n              </NavLink>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <NavLink to=\"/about\">\r\n                <div className={styles.menuItems} onClick={() => setIsSettings(false)}>\r\n                  О команде\r\n                </div>\r\n              </NavLink>\r\n            </Nav.Item>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","const AUTHORS = [\r\n  { name: 'Алексей Кульгейко', github: 'https://github.com/Kulgeyko93' },\r\n  { name: 'Азимжон Бурхонов', github: 'https://github.com/Burhonov' },\r\n  { name: 'Евгения Куринёва', github: 'https://github.com/Evgenia-cyber' },\r\n];\r\nexport { AUTHORS };\r\n","export default __webpack_public_path__ + \"static/media/rs_school_js.ad178c0d.svg\";","import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { AUTHORS } from '../../constants/authors';\r\nimport rs_school from '../../assets/icons/rs_school_js.svg';\r\nimport styles from './Footer.module.css';\r\n\r\nconst Footer = (): JSX.Element => (\r\n  <div>\r\n    <hr className={styles.color} />\r\n    <Container fluid>\r\n      <Row>\r\n        <Col className={styles.flex} lg={6} md={6} sm={6} xs={12}>\r\n          <a className={styles.link} href=\"https://rs.school/js/\">\r\n            <img className={styles.img} src={rs_school} alt=\"логотип rs_school\" />\r\n          </a>\r\n          <span className={styles.bold}>2021</span>\r\n        </Col>\r\n        <Col className={styles.flex} lg={6} md={6} sm={6} xs={12}>\r\n          {AUTHORS.map((author) => (\r\n            <div className={styles.right} key={author.name}>\r\n              <a className={styles.link} href={author.github}>\r\n                <span>{author.name}</span>\r\n              </a>\r\n            </div>\r\n          ))}\r\n        </Col>\r\n        <Col className={styles.flex} lg={12}>\r\n          <small>\r\n            Векторные изображения созданы{' '}\r\n            <a className={styles.link} href=\"https://ru.freepik.com/vectors/business\">\r\n              pch.vector и svstudioart - ru.freepik.com\r\n            </a>\r\n          </small>\r\n          <small>\r\n            Иконки созданы{' '}\r\n            <a className={styles.link} href=\"https://www.flaticon.com/authors/pixel-perfect\" title=\"Pixel perfect\">\r\n              Pixel perfect\r\n            </a>{' '}\r\n            from{' '}\r\n            <a className={styles.link} href=\"https://www.flaticon.com/\" title=\"Flaticon\">\r\n              www.flaticon.com\r\n            </a>\r\n          </small>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  </div>\r\n);\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport Figure from 'react-bootstrap/Figure';\r\n\r\ntype PropsType = {\r\n  img: string;\r\n  text: string;\r\n  name?: string;\r\n};\r\n\r\nconst textStyle = {\r\n  fontSize: '1rem',\r\n  color: '#000000',\r\n};\r\n\r\nconst FigureItem = ({ img, text, name }: PropsType): JSX.Element => (\r\n  <Figure>\r\n    {name === '' ? (\r\n      <Figure.Image width=\"55px\" height=\"55px\" alt=\"преимущество\" src={img} />\r\n    ) : (\r\n      <Figure.Image width=\"100%\" height=\"auto\" alt=\"разработчик\" src={img} />\r\n    )}\r\n    <Figure.Caption style={textStyle}>\r\n      <b>{name}</b>\r\n    </Figure.Caption>\r\n    <Figure.Caption style={textStyle}>{text}</Figure.Caption>\r\n  </Figure>\r\n);\r\n\r\nFigureItem.defaultProps = {\r\n  name: '',\r\n};\r\n\r\nexport default FigureItem;\r\n","/* eslint-disable max-len */\r\nexport const games = [\r\n  {\r\n    name: 'audiocall',\r\n    nameRU: 'Аудиовызов',\r\n    description: 'Игра Аудиовызов улучшает восприятие английской речи на слух.',\r\n    color: 'yellow',\r\n    img: 'https://i2.wp.com/hipertextual.com/wp-content/uploads/2016/02/Firewatch-Encabezado.jpg?fit=2560%2C1440&ssl=1',\r\n  },\r\n  {\r\n    name: 'sprint',\r\n    nameRU: 'Спринт',\r\n    description: 'Истинная гонка на проверку знаний. Укажи, верно ли приведен перевод слова?',\r\n    color: 'green',\r\n    img: 'https://oboi.ws/filters/lomo_17_12401_oboi_zelenyj_firewatch_1920x1080.jpg',\r\n  },\r\n  {\r\n    name: 'savannah',\r\n    nameRU: 'Саванна',\r\n    description: 'Игра Саванна развивает словарный запас. Чем больше слов ты знаешь, тем лучше.',\r\n    color: 'red',\r\n    img: 'https://img3.akspic.ru/originals/4/2/6/1/71624-illustracia-utro-nebo-poslesvechenie-pustynya-2000x1200.jpg',\r\n  },\r\n  {\r\n    name: 'riddle',\r\n    nameRU: 'Загадка',\r\n    description: 'Задействуй знания английского языка и кругозор для решения загадок со всего мира.',\r\n    color: 'blue',\r\n    img: 'https://s1.1zoom.ru/big3/596/Evening_Forests_Mountains_Firewatch_Campo_Santo_549147_2560x1440.jpg',\r\n  },\r\n];\r\n\r\nexport const volume = 0.5;\r\n\r\nexport const groups = ['0', '1', '2', '3', '4', '5'];\r\n\r\nexport const countPagesInGroup = 30; // from 0 to 29\r\n\r\nexport const wordsPerPage = 5;\r\n\r\nexport const endGame = {\r\n  messageIfNoErrors: 'Поздравляю, отличный результат!',\r\n  messageIfErrors: 'В этот раз без ошибок не получилось, но продолжай тренироваться!',\r\n};\r\n\r\nexport const ENTER_CODE = 'Enter';\r\nexport const ARROW_CODE = 'ArrowRight';\r\nexport const PLUS_CODE = '+';\r\nexport const GAME_ANSWERS_CODES = ['1', '2', '3', '4', '5'];\r\n","export const getRandom = (number: number): number => Math.floor(Math.random() * number);\r\n","import { getRandom } from './getRandom';\r\n\r\nexport const getRandomArray = (arrayLength: number, quantity: number): Array<number> => {\r\n  const randomArray: Array<number> = [];\r\n  while (quantity !== randomArray.length) {\r\n    const newRandomArrayElement = getRandom(arrayLength);\r\n    if (randomArray.includes(newRandomArrayElement)) {\r\n      const index = randomArray.indexOf(newRandomArrayElement);\r\n      randomArray.splice(index, 1);\r\n    }\r\n    randomArray.unshift(newRandomArrayElement);\r\n  }\r\n  return randomArray;\r\n};\r\n","import { Word } from '../types';\r\nimport { getRandom } from './getRandom';\r\n\r\nconst createIndiciesArrayWithPlayWordIndex = (arrayOfIndices: Array<number>, playWordIndex: number): Array<number> => {\r\n  if (!arrayOfIndices.includes(playWordIndex)) {\r\n    const newIndex = getRandom(arrayOfIndices.length);\r\n    arrayOfIndices.splice(newIndex, 1, playWordIndex);\r\n  }\r\n  return arrayOfIndices;\r\n};\r\n\r\nexport const createGameArray = (originArray: Array<Word>, arrayOfIndices: Array<number>): Array<Word> =>\r\n  arrayOfIndices.map((indexNumber) => originArray[indexNumber]);\r\n\r\nexport const createWordsArray = (\r\n  originArray: Array<Word>,\r\n  arrayOfIndices: Array<number>,\r\n  playWordIndex: number,\r\n): Array<Word> => {\r\n  createIndiciesArrayWithPlayWordIndex(arrayOfIndices, playWordIndex);\r\n  return createGameArray(originArray, arrayOfIndices);\r\n};\r\n","import axios from 'axios';\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { getRandomArray } from '../../utils/getRandomArray';\r\nimport { createWordsArray, createGameArray } from '../../utils/createWordsArray';\r\nimport { AppThunk, RootState } from '../../app/store';\r\nimport { getRandom } from '../../utils/getRandom';\r\nimport { Word } from '../../types';\r\nimport { countPagesInGroup, wordsPerPage } from '../../constants/games';\r\n\r\ninterface GameState {\r\n  isGameOpenFromTextBook: boolean;\r\n  currentLevel: string;\r\n  originWordsArray: Array<Word>;\r\n  currentWordIndex: number;\r\n  currentWord: Word | null;\r\n  playWordsArray: Array<Word>;\r\n  isPlaying: boolean;\r\n  wrongAnswers: Array<Word>;\r\n  correctAnswers: Array<Word>;\r\n  isGameEnd: boolean;\r\n  isLoading: boolean;\r\n  attempts: Array<number>;\r\n  currentGame: string;\r\n  gameLearnedWords: Array<string>;\r\n}\r\n\r\nconst initialState: GameState = {\r\n  isGameOpenFromTextBook: false,\r\n  currentLevel: '0',\r\n  originWordsArray: [],\r\n  currentWordIndex: 0,\r\n  currentWord: null,\r\n  playWordsArray: [],\r\n  isPlaying: false,\r\n  wrongAnswers: [],\r\n  correctAnswers: [],\r\n  isGameEnd: false,\r\n  isLoading: false,\r\n  attempts: [1, 2, 3, 4, 5],\r\n  currentGame: '',\r\n  gameLearnedWords: [],\r\n};\r\n\r\nexport const gameSlice = createSlice({\r\n  name: 'game',\r\n  initialState,\r\n  reducers: {\r\n    setOriginWordsArray: (state, action: PayloadAction<Array<Word>>) => {\r\n      const data = action.payload;\r\n      const newArrayOfIndices = getRandomArray(data.length, data.length);\r\n      state.originWordsArray = createGameArray(data, newArrayOfIndices);\r\n      state.gameLearnedWords = data.map((word) => word.id);\r\n    },\r\n    setPlayWordsArray: (state) => {\r\n      switch (state.currentGame) {\r\n        case 'audiocall': {\r\n          if (state.currentWordIndex < state.originWordsArray.length && state.wrongAnswers.length < 5) {\r\n            const data = state.originWordsArray;\r\n            const newArrayOfIndices = getRandomArray(data.length, wordsPerPage);\r\n            const newPlayWordsArray = createWordsArray(data, newArrayOfIndices, state.currentWordIndex);\r\n            state.playWordsArray = newPlayWordsArray;\r\n          } else {\r\n            state.isGameEnd = true;\r\n          }\r\n          break;\r\n        }\r\n        case 'savannah': {\r\n          if (state.currentWordIndex < state.originWordsArray.length && state.wrongAnswers.length < 5) {\r\n            const data = state.originWordsArray;\r\n            const newArrayOfIndices = getRandomArray(data.length, wordsPerPage);\r\n            const newPlayWordsArray = createWordsArray(data, newArrayOfIndices, state.currentWordIndex);\r\n            state.playWordsArray = newPlayWordsArray;\r\n          } else {\r\n            state.isGameEnd = true;\r\n          }\r\n          break;\r\n        }\r\n        case 'sprint': {\r\n          if (state.currentWordIndex < state.originWordsArray.length) {\r\n            state.playWordsArray = state.originWordsArray;\r\n          } else {\r\n            state.isGameEnd = true;\r\n          }\r\n          break;\r\n        }\r\n        case 'riddle': {\r\n          if (state.currentWordIndex < state.originWordsArray.length && state.wrongAnswers.length < 5) {\r\n            const data = state.originWordsArray;\r\n            const newArrayOfIndices = getRandomArray(data.length, wordsPerPage);\r\n            const newPlayWordsArray = createWordsArray(data, newArrayOfIndices, state.currentWordIndex);\r\n            state.playWordsArray = newPlayWordsArray;\r\n          } else {\r\n            state.isGameEnd = true;\r\n          }\r\n          break;\r\n        }\r\n        default: {\r\n          state.isGameEnd = false;\r\n        }\r\n      }\r\n    },\r\n    setCurrentWord: (state) => {\r\n      if (state.originWordsArray !== []) {\r\n        const index = state.currentWordIndex;\r\n        state.currentWord = state.originWordsArray[index];\r\n      }\r\n    },\r\n    setCurrentWordIndex: (state) => {\r\n      if (state.originWordsArray !== []) {\r\n        state.currentWordIndex++;\r\n      }\r\n    },\r\n    setIsPlaying: (state, action: PayloadAction<boolean>) => {\r\n      state.isPlaying = action.payload;\r\n    },\r\n    pushCorrectAnswers: (state, action: PayloadAction<Word>) => {\r\n      state.correctAnswers.push(action.payload);\r\n    },\r\n    pushWrongAnswers: (state, action: PayloadAction<Word>) => {\r\n      state.wrongAnswers.push(action.payload);\r\n      state.attempts.pop();\r\n    },\r\n    setIsGameEnd: (state, action: PayloadAction<boolean>) => {\r\n      state.isGameEnd = action.payload;\r\n    },\r\n    setInitSettings: (state) => {\r\n      state.currentLevel = '0';\r\n      state.originWordsArray = [];\r\n      state.currentWordIndex = 0;\r\n      state.currentWord = null;\r\n      state.playWordsArray = [];\r\n      state.isPlaying = false;\r\n      state.wrongAnswers = [];\r\n      state.correctAnswers = [];\r\n      state.isGameEnd = false;\r\n      state.isLoading = false;\r\n      state.attempts = [1, 2, 3, 4, 5];\r\n      state.gameLearnedWords = [];\r\n    },\r\n    setInitSettingsFromBook: (state) => {\r\n      state.currentLevel = '0';\r\n      state.currentWordIndex = 0;\r\n      state.currentWord = null;\r\n      state.playWordsArray = [];\r\n      state.isPlaying = false;\r\n      state.wrongAnswers = [];\r\n      state.correctAnswers = [];\r\n      state.isGameEnd = false;\r\n      state.isLoading = false;\r\n      state.attempts = [1, 2, 3, 4, 5];\r\n      state.gameLearnedWords = [];\r\n    },\r\n    setIsLoading: (state, action: PayloadAction<boolean>) => {\r\n      state.isLoading = action.payload;\r\n    },\r\n    setIsGameOpenFromTextBook: (state, action: PayloadAction<boolean>) => {\r\n      state.isGameOpenFromTextBook = action.payload;\r\n    },\r\n    setCurrentLevel: (state, action: PayloadAction<string>) => {\r\n      state.currentLevel = action.payload;\r\n    },\r\n    setCurrentGame: (state, action: PayloadAction<string>) => {\r\n      state.currentGame = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setOriginWordsArray,\r\n  setPlayWordsArray,\r\n  setCurrentWord,\r\n  setCurrentWordIndex,\r\n  setIsPlaying,\r\n  setIsGameEnd,\r\n  pushCorrectAnswers,\r\n  pushWrongAnswers,\r\n  setInitSettings,\r\n  setIsLoading,\r\n  setCurrentLevel,\r\n  setCurrentGame,\r\n  setIsGameOpenFromTextBook,\r\n  setInitSettingsFromBook,\r\n} = gameSlice.actions;\r\n\r\nexport const fetchWords = (group: string): AppThunk => async (dispatch) => {\r\n  dispatch(setIsLoading(true));\r\n  const randomPage = getRandom(countPagesInGroup);\r\n  try {\r\n    const { data } = await axios.get(`words?group=${group}&page=${randomPage}`);\r\n    // eslint-disable-next-line no-console\r\n    dispatch(setIsGameOpenFromTextBook(false));\r\n    dispatch(setOriginWordsArray(data));\r\n    dispatch(setPlayWordsArray());\r\n    dispatch(setCurrentWord());\r\n    dispatch(setIsPlaying(true));\r\n  } catch (error) {\r\n    // eslint-disable-next-line no-console\r\n    console.error(error);\r\n    // eslint-disable-next-line no-alert\r\n    alert('Сервер недоступен! Попробуйте позже');\r\n  }\r\n  dispatch(setIsLoading(false));\r\n};\r\n\r\nexport const playWords = (state: RootState): Array<Word> => state.game.playWordsArray;\r\nexport const playWord = (state: RootState): Word | null => state.game.currentWord;\r\nexport const isPlaying = (state: RootState): boolean => state.game.isPlaying;\r\nexport const isGameEnd = (state: RootState): boolean => state.game.isGameEnd;\r\nexport const wrongAnswers = (state: RootState): Array<Word> => state.game.wrongAnswers;\r\nexport const correctAnswers = (state: RootState): Array<Word> => state.game.correctAnswers;\r\nexport const isLoading = (state: RootState): boolean => state.game.isLoading;\r\nexport const currentLevel = (state: RootState): string => state.game.currentLevel;\r\nexport const isGameOpenFromTextBook = (state: RootState): boolean => state.game.isGameOpenFromTextBook;\r\nexport const attempts = (state: RootState): Array<number> => state.game.attempts;\r\nexport const currentGame = (state: RootState): string => state.game.currentGame;\r\nexport const gameLearnedWords = (state: RootState): Array<string> => state.game.gameLearnedWords;\r\nexport const originWordsArray = (state: RootState): Array<Word> => state.game.originWordsArray;\r\n\r\nexport default gameSlice.reducer;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { groups } from '../../constants/games';\r\nimport {\r\n  setCurrentLevel,\r\n  currentLevel,\r\n} from '../../features/game/gameSlice';\r\nimport styles from './GameOptions.module.css';\r\n\r\nconst select = {\r\n  backgroundColor: 'transparent',\r\n  borderColor: '#000',\r\n  cursor: 'pointer',\r\n  boxShadow: 'none',\r\n  outline: 'none',\r\n};\r\n\r\nconst option = {\r\n  backgroundColor: 'rgba(253, 253, 255, 0.4)',\r\n};\r\n\r\ntype PropsType = {\r\n  gameName: string;\r\n};\r\n\r\nconst GameOptions = ({ gameName }: PropsType): JSX.Element => {\r\n  const currentLvlForGame = useSelector(currentLevel);\r\n  const [level, setLevel] = React.useState(currentLvlForGame);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  React.useEffect(() => {\r\n    if (window.localStorage.getItem(gameName) !== null) {\r\n      const newValue = window.localStorage.getItem(gameName);\r\n      if (newValue !== null) {\r\n        setLevel(newValue);\r\n      }\r\n    } else {\r\n      window.localStorage.setItem(gameName, level);\r\n    }\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    window.localStorage.setItem(gameName, level);\r\n  }, [gameName, level]);\r\n\r\n  const handlerOnChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setLevel(event.target.value as string);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Form style={select}>\r\n        <Form.Group controlId=\"exampleForm.SelectCustom\">\r\n          <Form.Control\r\n            value={level}\r\n            onChange={handlerOnChange}\r\n            size=\"sm\"\r\n            style={select}\r\n            as=\"select\"\r\n            custom\r\n          >\r\n            {groups &&\r\n              groups.map((item, index) => (\r\n                <option style={option} key={item} value={index} onChange={() => dispatch(setCurrentLevel(item))}>\r\n                  Уровень сложности {index}\r\n                </option>\r\n              ))}\r\n          </Form.Control>\r\n        </Form.Group>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameOptions;\r\n","/* eslint-disable react/no-danger */\r\nimport React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Button, Card } from 'react-bootstrap';\r\nimport { games } from '../../constants/games';\r\nimport GameOptions from '../../components/GameOptions/GameOptions';\r\nimport styles from './Games.module.css';\r\nimport { setCurrentGame, setIsGameOpenFromTextBook } from '../../features/game/gameSlice';\r\n\r\nconst imgStyle = {\r\n  height: '280px',\r\n  objectFit: 'cover',\r\n} as React.CSSProperties;\r\n\r\nconst Games = (): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n\r\n  const onPlayBtnClick = (gameName: string): void => {\r\n    dispatch(setCurrentGame(gameName));\r\n    dispatch(setIsGameOpenFromTextBook(false));\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <h4 className={styles.margin}>Игры</h4>\r\n      <Row>\r\n        {games &&\r\n          games.map((game) => (\r\n            <Col key={game.color} lg={6} md={12} sm={12} className={styles.item}>\r\n              <Container fluid>\r\n                <Container fluid className={styles[game.color]}>\r\n                  <Card className={styles.card}>\r\n                    <Card.Header>{game.nameRU.toUpperCase()}</Card.Header>\r\n                    <Card.Img variant=\"top\" src={`${game.img}`} style={imgStyle} />\r\n                    <Card.Body>\r\n                      <Card.Title>\r\n                        <GameOptions gameName={game.name} />\r\n                      </Card.Title>\r\n                      <Card.Text dangerouslySetInnerHTML={{ __html: game.description }} />\r\n                      <NavLink to=\"prestart\">\r\n                        <Button\r\n                          className={styles.gameBtn}\r\n                          variant=\"primary\"\r\n                          onClick={() => {\r\n                            onPlayBtnClick(game.name);\r\n                          }}\r\n                        >\r\n                          Играть\r\n                        </Button>\r\n                      </NavLink>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Container>\r\n              </Container>\r\n            </Col>\r\n          ))}\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Games;\r\n","export default __webpack_public_path__ + \"static/media/main_screen.3ac7ed06.png\";","export default __webpack_public_path__ + \"static/media/books.f75f67f6.svg\";","export default __webpack_public_path__ + \"static/media/game.e3afd78f.svg\";","export default __webpack_public_path__ + \"static/media/warning.47a7b73f.svg\";","export default __webpack_public_path__ + \"static/media/progress.c5933eea.svg\";","import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport FigureItem from '../../components/FigureItem/FigureItem';\r\nimport Games from '../Games/Games';\r\nimport mainScreenImg from '../../assets/main_screen.png';\r\nimport booksImg from '../../assets/icons/books.svg';\r\nimport gameImg from '../../assets/icons/game.svg';\r\nimport warningImg from '../../assets/icons/warning.svg';\r\nimport progressImg from '../../assets/icons/progress.svg';\r\nimport styles from './Main.module.css';\r\n// import Video from '../../components/Video/Video';\r\n\r\nconst Main = (): JSX.Element => (\r\n  <div className={styles.main}>\r\n    <Container fluid>\r\n      <img className={styles.mainScreenImg} src={mainScreenImg} alt=\"Английский - это легко с RS LANG\" />\r\n      <hr className={styles.color} />\r\n      {/* <h5 className={styles.margin}>Посмотри видео, чтобы узнать, как работает приложение</h5>\r\n      <Video /> */}\r\n      <h4 className={styles.margin}>Учи английский с RS LANG</h4>\r\n      <Container>\r\n        <Row>\r\n          <Col lg={3} md={6} sm={6} xs={6}>\r\n            <FigureItem img={booksImg} text=\"Увеличивай словарный запас\" />\r\n          </Col>\r\n          <Col lg={3} md={6} sm={6} xs={6}>\r\n            <FigureItem img={gameImg} text=\"Играй и запоминай слова\" />\r\n          </Col>\r\n          <Col lg={3} md={6} sm={6} xs={6}>\r\n            <FigureItem img={warningImg} text=\"Отмечай сложные слова\" />\r\n          </Col>\r\n          <Col lg={3} md={6} sm={6} xs={6}>\r\n            <FigureItem img={progressImg} text=\"Отслеживай свой прогресс\" />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className={styles.games}>\r\n            <Games />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Container>\r\n  </div>\r\n);\r\n\r\nexport default Main;\r\n","export default __webpack_public_path__ + \"static/media/volume.549749cf.svg\";","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState } from '../../app/store';\r\nimport { volume } from '../../constants/games';\r\n\r\ninterface GamesState {\r\n  soundsVolume: number;\r\n}\r\n\r\nconst initialState: GamesState = {\r\n  soundsVolume: volume,\r\n};\r\n\r\nexport const gamesSlice = createSlice({\r\n  name: 'games',\r\n  initialState,\r\n  reducers: {\r\n    setSoundsVolume: (state, action: PayloadAction<number>) => {\r\n      state.soundsVolume = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setSoundsVolume } = gamesSlice.actions;\r\n\r\nexport const soundsVolume = (state: RootState): number => state.games.soundsVolume;\r\n\r\nexport default gamesSlice.reducer;\r\n","type Sound = {\r\n  audio: HTMLAudioElement | null;\r\n  playSound(path: string, volume: number): void;\r\n};\r\n\r\nexport const sound: Sound = {\r\n  audio: null,\r\n  playSound(path, volume) {\r\n    const audio = new Audio(path);\r\n    audio.volume = volume;\r\n    const playPromise = audio.play();\r\n    if (playPromise !== undefined) {\r\n      playPromise\r\n        .then(() => {\r\n          if (this.audio && audio.onended) {\r\n            this.audio.pause();\r\n          }\r\n          this.audio = audio;\r\n        })\r\n        .catch((error) => {\r\n          // eslint-disable-next-line no-alert\r\n          alert('Сервер недоступен! Попробуйте позже');\r\n          // eslint-disable-next-line no-console\r\n          console.log(error);\r\n        });\r\n    }\r\n  },\r\n};\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { NavLink } from 'react-router-dom';\r\nimport * as Icon from 'react-bootstrap-icons';\r\nimport styles from './GameHeader.module.css';\r\nimport { setInitSettings, attempts } from '../../features/game/gameSlice';\r\nimport { setSoundsVolume } from '../../features/games/gamesSlice';\r\nimport { volume } from '../../constants/games';\r\n\r\ntype PropsType = {\r\n  color: string;\r\n  soundVolume: number;\r\n  gameRef: React.MutableRefObject<HTMLInputElement>;\r\n  isKeyboardActive: boolean;\r\n};\r\n\r\nconst gameHeaderStyle = {\r\n  imgStyle: {\r\n    marginRight: '30px',\r\n    color: '#000',\r\n    fontSize: '30px',\r\n  },\r\n  heartStyle: {\r\n    margin: '0 10px 0 0',\r\n    color: '#ff0000',\r\n  },\r\n  keyboard: {\r\n    color: '#000',\r\n    fontSize: '30px',\r\n  },\r\n};\r\n\r\nconst GameHeader = ({ color, soundVolume, gameRef, isKeyboardActive }: PropsType): JSX.Element => {\r\n  const [isFullScreen, setIsFullScreen] = React.useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const arrayAttempts = useSelector(attempts);\r\n\r\n  React.useEffect(() => {\r\n    if (!isFullScreen) {\r\n      if (document.fullscreenElement) {\r\n        document.exitFullscreen();\r\n      }\r\n    } else {\r\n      gameRef.current.requestFullscreen().catch((error) => {\r\n        // eslint-disable-next-line no-console\r\n        console.log(error);\r\n      });\r\n    }\r\n  }, [isFullScreen]);\r\n\r\n  React.useEffect(() => {\r\n    window.localStorage.setItem('volume', soundVolume.toString());\r\n  }, [dispatch, soundVolume]);\r\n\r\n  const onCloseBtnClick = () => {\r\n    dispatch(setInitSettings());\r\n  };\r\n\r\n  const onVolumeBtnClick = () => {\r\n    if (soundVolume === volume) {\r\n      dispatch(setSoundsVolume(0));\r\n    } else {\r\n      dispatch(setSoundsVolume(volume));\r\n    }\r\n  };\r\n\r\n  const onFullScreenBtnClick = () => {\r\n    setIsFullScreen((isFullscreen) => !isFullscreen);\r\n  };\r\n\r\n  return (\r\n    <div className={styles[color]}>\r\n      <Container fluid className={styles.container}>\r\n        <Row>\r\n          <Col className={styles.left}>\r\n            <div\r\n              role=\"button\"\r\n              tabIndex={0}\r\n              onClick={onVolumeBtnClick}\r\n              className={styles.img}\r\n              style={gameHeaderStyle.imgStyle}\r\n            >\r\n              {soundVolume === volume ? <Icon.VolumeUpFill /> : <Icon.VolumeMuteFill />}\r\n            </div>\r\n            {isKeyboardActive && (\r\n              <div style={gameHeaderStyle.keyboard}>\r\n                <Icon.Keyboard />\r\n              </div>\r\n            )}\r\n          </Col>\r\n          {arrayAttempts.length > 0 && (\r\n            <Col className={styles.center}>\r\n              {arrayAttempts.map((item) => (\r\n                <div key={item} style={gameHeaderStyle.heartStyle}>\r\n                  <Icon.HeartFill />\r\n                </div>\r\n              ))}\r\n            </Col>\r\n          )}\r\n          <Col className={styles.right}>\r\n            <div\r\n              role=\"button\"\r\n              tabIndex={0}\r\n              onClick={onFullScreenBtnClick}\r\n              style={gameHeaderStyle.imgStyle}\r\n              className={styles.img}\r\n            >\r\n              {isFullScreen ? <Icon.Fullscreen /> : <Icon.FullscreenExit />}\r\n            </div>\r\n            <NavLink to=\"/\">\r\n              <div style={gameHeaderStyle.imgStyle} onClick={onCloseBtnClick} role=\"button\" tabIndex={0}>\r\n                <Icon.XSquare />\r\n              </div>\r\n            </NavLink>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameHeader;\r\n","import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport styles from './gameDescription.module.css';\r\n\r\ntype PropsType = {\r\n  gameCheck?: string;\r\n};\r\n\r\nconst GameDescription = ({ gameCheck }: PropsType): JSX.Element => (\r\n  <Container fluid className={styles.container}>\r\n    <p>Чтобы играть с клавиатуры, кликни в любую точку поля игры.</p>\r\n    <p>Чтобы выбрать нужный ответ, нажми соответствующую клавишу на цифровой клавиатуре.</p>\r\n    <p>Клавиша &quot;Enter&quot; — аналог клика по кнопке &quot;Не знаю&quot;.</p>\r\n    <p>Клавиша-стрелка вправо — аналог клика по кнопке &quot;Далее&quot;.</p>\r\n    {\r\n      gameCheck !== 'ourGame'\r\n        ? <p>Клавиша &quot;+&quot; на цифровой клавиатуре — чтобы услышать слово.</p>\r\n        : ''\r\n    }\r\n    <p>После 5 неправильных ответов игра закончится.</p>\r\n  </Container>\r\n);\r\n\r\nexport default GameDescription;\r\n\r\nGameDescription.defaultProps = {\r\n  gameCheck: '',\r\n};\r\n","export default __webpack_public_path__ + \"static/media/close.17a94979.svg\";","import React from 'react';\r\nimport Image from 'react-bootstrap/Image';\r\nimport volumeImg from '../../assets/icons/volume.svg';\r\nimport { volume } from '../../constants/games';\r\nimport { Word } from '../../types';\r\nimport { sound } from '../../utils/sound';\r\nimport styles from './gameResultsItem.module.css';\r\n\r\ntype PropsType = {\r\n  answer: Word;\r\n};\r\n\r\nconst GameResultsItem = ({ answer }: PropsType): JSX.Element => {\r\n  const onSoundImgClick = () => {\r\n    const soundUrl = `${process.env.REACT_APP_BASE_URL}/${answer.audio}`;\r\n    sound.playSound(soundUrl, volume);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.word}>\r\n      <Image className={styles.img} width=\"20\" height=\"auto\" src={volumeImg} onClick={onSoundImgClick} />\r\n      <p className={styles.bold}>{answer.word}</p>\r\n      <p className={styles.margin}>{answer.wordTranslate}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameResultsItem;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Image from 'react-bootstrap/Image';\r\nimport closeImg from '../../assets/icons/close.svg';\r\nimport { setInitSettings, setInitSettingsFromBook, isGameOpenFromTextBook } from '../../features/game/gameSlice';\r\nimport { Word } from '../../types';\r\nimport GameResultsItem from '../GameResultsItem/GameResultsItem';\r\nimport styles from './gameResults.module.css';\r\n\r\ntype PropsType = {\r\n  correctAnswers: Array<Word>;\r\n  wrongAnswers: Array<Word>;\r\n  color: string;\r\n};\r\n\r\nconst GameResults = ({ correctAnswers, wrongAnswers, color }: PropsType): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n  const isGameOpenFromBook = useSelector(isGameOpenFromTextBook);\r\n\r\n  const onCloseBtnClick = () => {\r\n    if (isGameOpenFromBook) {\r\n      dispatch(setInitSettingsFromBook());\r\n    } else {\r\n      dispatch(setInitSettings());\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container fluid className={styles[color]}>\r\n      <Row>\r\n        <Col>\r\n          <div onClick={onCloseBtnClick} className={styles.closeImg} role=\"button\" tabIndex={0}>\r\n            <Image width=\"20\" height=\"auto\" src={closeImg} fluid />\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <p>\r\n              Ошибок <span className={styles.wrong}>{wrongAnswers.length}</span>\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            {wrongAnswers.length !== 0 &&\r\n              wrongAnswers.map((answer) => <GameResultsItem key={answer.id} answer={answer} />)}\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <p>\r\n              Правильно <span className={styles.correct}>{correctAnswers.length}</span>\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            {correctAnswers.length !== 0 &&\r\n              correctAnswers.map((answer) => <GameResultsItem key={answer.id} answer={answer} />)}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default GameResults;\r\n","export const getDayAndMonth = (): string => new Date().toLocaleString('ru-RU', { day: 'numeric', month: 'long' });\r\n","export const getUniqueArray = (array: Array<string>): Array<string> =>\r\n  array.reduce((res: Array<string>, item) => {\r\n    if (!res.includes(item)) {\r\n      res.push(item);\r\n    }\r\n    return res;\r\n  }, []);\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Image from 'react-bootstrap/Image';\r\nimport Button from 'react-bootstrap/Button';\r\nimport closeImg from '../../assets/icons/close.svg';\r\nimport { endGame, games } from '../../constants/games';\r\nimport styles from './endGame.module.css';\r\nimport {\r\n  correctAnswers,\r\n  currentGame,\r\n  gameLearnedWords,\r\n  isGameOpenFromTextBook,\r\n  setInitSettings,\r\n  wrongAnswers,\r\n  setInitSettingsFromBook,\r\n} from '../../features/game/gameSlice';\r\nimport GameResults from '../GameResults/GameResults';\r\nimport { getDayAndMonth } from '../../utils/getDayAndMonth';\r\nimport { getUniqueArray } from '../../utils/getUniqueArray';\r\nimport { Data, DataItem } from '../../features/statistics/statisticsSlice';\r\nimport { Status, StorageKey } from '../../types';\r\nimport { selectAuthData, selectAuthStatus } from '../../features/auth/authSlice';\r\n\r\ntype PropsType = {\r\n  color: string;\r\n};\r\n\r\nconst EndGame = ({ color }: PropsType): JSX.Element => {\r\n  const [isDataPutInLocalStorage, setIsDataPutInLocalStorage] = React.useState(false);\r\n  const dispatch = useDispatch();\r\n  const authData = useSelector(selectAuthData);\r\n  const authStatus = useSelector(selectAuthStatus);\r\n  const wrongAnswersArr = useSelector(wrongAnswers);\r\n  const correctAnswersArr = useSelector(correctAnswers);\r\n  const currentGameNameEng = useSelector(currentGame);\r\n  const learnedWordsFromGame = useSelector(gameLearnedWords);\r\n  // const learnedWordsFromGame = ['ahead', 'top', 'end', 'spring', 'hello', 'yes'];\r\n  // const isGameOpenFromBook = true;\r\n  const isGameOpenFromBook = useSelector(isGameOpenFromTextBook);\r\n  const [isShowResult, setIsShowResult] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    if (isGameOpenFromBook) {\r\n      // переводим имя игры на русский\r\n      const currentGameName = games.reduce((res, game) => {\r\n        if (game.name === currentGameNameEng) {\r\n          // eslint-disable-next-line no-param-reassign\r\n          res = game.nameRU;\r\n        }\r\n        return res;\r\n      }, '');\r\n      const today = getDayAndMonth();\r\n      // сначала надо сформировать массив данных для хранения в localStorage\r\n      const gameData = {\r\n        name: currentGameName,\r\n        words: learnedWordsFromGame,\r\n        countCorrectAnswers: correctAnswersArr.length,\r\n        longestSeriesCorrectAnswers: correctAnswersArr.length,\r\n      };\r\n\r\n      const serializedStatistics = localStorage.getItem(StorageKey.Statistics);\r\n\r\n      if (serializedStatistics) {\r\n        try {\r\n          const statistics: Data = JSON.parse(serializedStatistics);\r\n          if (statistics.date === today) {\r\n            // то надо добавить результаты игры\r\n            // проверим, есть ли уже такая игра в localStorage\r\n            const game = statistics.data.filter((item: DataItem) => item.name === currentGameName)[0];\r\n\r\n            if (game) {\r\n              // если такая игра есть\r\n              // добавляем изученные слова, если они отличаются\r\n              const allThisGameLearnedWords = getUniqueArray([...game.words, ...learnedWordsFromGame]);\r\n              // проверяем, какая серия правильных ответов длиннее\r\n              // eslint-disable-next-line max-len\r\n              const longest =\r\n                game.longestSeriesCorrectAnswers > gameData.longestSeriesCorrectAnswers\r\n                  ? game.longestSeriesCorrectAnswers\r\n                  : gameData.longestSeriesCorrectAnswers;\r\n              // складываем количество правильных ответов\r\n              const countAllCorrectAnswers = game.countCorrectAnswers + gameData.countCorrectAnswers;\r\n              // объект с текущими данными\r\n              const newGameData = {\r\n                name: currentGameName,\r\n                words: allThisGameLearnedWords,\r\n                countCorrectAnswers: countAllCorrectAnswers,\r\n                longestSeriesCorrectAnswers: longest,\r\n              };\r\n              // заменим в статистике game на newGameData\r\n              statistics.data = statistics.data.map((item: DataItem) => {\r\n                if (item.name === game.name) {\r\n                  return newGameData;\r\n                }\r\n                return item;\r\n              });\r\n            } else {\r\n              // если такой игры нет, то добавляем ее в конец массива\r\n              statistics.data.push(gameData);\r\n            }\r\n            // добавляем данные в localStorage\r\n            localStorage.setItem(StorageKey.Statistics, JSON.stringify(statistics));\r\n            setIsDataPutInLocalStorage(true);\r\n          } else {\r\n            // если прошедший день, то удаляем данные\r\n            localStorage.removeItem(StorageKey.Statistics);\r\n          }\r\n        } catch (e) {\r\n          /* eslint-disable-next-line no-console */\r\n          console.error(e);\r\n        }\r\n      } else {\r\n        // если STATISTICS нет, то добавляем данные в localStorage\r\n        const data = {\r\n          date: today,\r\n          data: [gameData],\r\n        };\r\n        localStorage.setItem(StorageKey.Statistics, JSON.stringify(data));\r\n        setIsDataPutInLocalStorage(true);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    if (isGameOpenFromBook && authStatus === Status.Authorized && authData && isDataPutInLocalStorage) {\r\n      const today = getDayAndMonth();\r\n      const serializedStatistics = localStorage.getItem(StorageKey.Statistics);\r\n      setIsDataPutInLocalStorage(false);\r\n      if (serializedStatistics) {\r\n        try {\r\n          const statistics: Data = JSON.parse(serializedStatistics);\r\n          if (statistics.date === today) {\r\n            // надо отправить данные в базу данных\r\n            // достаем из localStorage все выученные в играх слова\r\n            const allLearnedWords = statistics.data.map((item) => item.words).flat();\r\n            // получаем все уникальные выученные слова\r\n            const learnedWords = getUniqueArray(allLearnedWords);\r\n            // получаем id пользователя\r\n            const { userId } = authData;\r\n\r\n            axios\r\n              .get(`/users/${userId}/statistics`)\r\n              .then((response) => {\r\n                if (response.status === 200) {\r\n                  // если есть данные в optional, то используем их, иначе используем пустой объект\r\n                  const oldData = response.data.optional ? response.data.optional.data : {};\r\n                  oldData[today] = learnedWords.length;\r\n                  const newData = {\r\n                    learnedWords: learnedWords.length,\r\n                    optional: {\r\n                      data: oldData,\r\n                    },\r\n                  };\r\n                  // //////////////обнулить данные\r\n                  // const newData = {\r\n                  //   learnedWords: learnedWords.length,\r\n                  //   optional: {},\r\n                  // };\r\n                  // //////////////добавить старые данные\r\n                  // const newData = {\r\n                  //   learnedWords: learnedWords.length,\r\n                  //   optional: {\r\n                  //     data: { '10 апреля': 5, '11 апреля': 15 },\r\n                  //   },\r\n                  // };\r\n                  // //////////////\r\n                  axios\r\n                    .put(`/users/${userId}/statistics`, newData)\r\n                    // eslint-disable-next-line no-console\r\n                    .then((response2) => console.log(response2.data))\r\n                    // eslint-disable-next-line no-console\r\n                    .catch((error) => console.log(error));\r\n                }\r\n              })\r\n              .catch((error) => {\r\n                // eslint-disable-next-line no-console\r\n                console.log(error);\r\n                const newData = {\r\n                  learnedWords: learnedWords.length,\r\n                  optional: {\r\n                    data: { [today]: learnedWords.length },\r\n                  },\r\n                };\r\n                axios.put(`/users/${userId}/statistics`, newData);\r\n              });\r\n          }\r\n        } catch (e) {\r\n          /* eslint-disable-next-line no-console */\r\n          console.error(e);\r\n        }\r\n      }\r\n    }\r\n  }, [isDataPutInLocalStorage]);\r\n\r\n  const onResultBtnClick = () => {\r\n    setIsShowResult(true);\r\n  };\r\n\r\n  const onCloseBtnClick = () => {\r\n    if (isGameOpenFromBook) {\r\n      dispatch(setInitSettingsFromBook());\r\n    } else {\r\n      dispatch(setInitSettings());\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      {!isShowResult && (\r\n        <Container fluid className={styles[color]}>\r\n          <Container className={styles.container}>\r\n            <Row>\r\n              <Col>\r\n                <div className={styles.img} onClick={onCloseBtnClick} role=\"button\" tabIndex={0}>\r\n                  <Image width=\"10\" height=\"auto\" src={closeImg} fluid />\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <p>{wrongAnswersArr.length === 0 ? endGame.messageIfNoErrors : endGame.messageIfErrors}</p>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <p>\r\n                  правильно: {correctAnswersArr.length}, ошибок: {wrongAnswersArr.length}\r\n                </p>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <Button onClick={onResultBtnClick} variant=\"outline-dark\">\r\n                  Результаты игры\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Container>\r\n      )}\r\n      {isShowResult && <GameResults color={color} correctAnswers={correctAnswersArr} wrongAnswers={wrongAnswersArr} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EndGame;\r\n","export default __webpack_public_path__ + \"static/media/yes.47465416.svg\";","export default __webpack_public_path__ + \"static/media/no.5b4896d2.svg\";","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Image from 'react-bootstrap/Image';\r\nimport yesImg from '../../assets/icons/yes.svg';\r\nimport noImg from '../../assets/icons/no.svg';\r\nimport { pushWrongAnswers, pushCorrectAnswers } from '../../features/game/gameSlice';\r\nimport { sound } from '../../utils/sound';\r\nimport { Word } from '../../types';\r\nimport { GAME_ANSWERS_CODES } from '../../constants/games';\r\nimport styles from './possibleAnswer.module.css';\r\n\r\nconst correctSound = 'assets/sounds/correct.mp3';\r\nconst wrongSound = 'assets/sounds/wrong.mp3';\r\n\r\ntype PropsType = {\r\n  currentWord: Word | null;\r\n  word: Word;\r\n  index: number;\r\n  isShowAnswer: boolean;\r\n  setIsShowAnswer: (isShowAnswer: boolean) => void;\r\n  isNewGroupWords: boolean;\r\n  setIsNewGroupWords: (isNewGroupWords: boolean) => void;\r\n  isFirstClick: boolean;\r\n  setIsFirstClick: (isFirstClick: boolean) => void;\r\n  soundVolume: number;\r\n  pressedKeyboardKey: string;\r\n  gameCheck?: string;\r\n};\r\n\r\nconst PossibleAnswer = ({\r\n  currentWord,\r\n  word,\r\n  index,\r\n  isShowAnswer,\r\n  setIsShowAnswer,\r\n  isNewGroupWords,\r\n  setIsNewGroupWords,\r\n  isFirstClick,\r\n  setIsFirstClick,\r\n  soundVolume,\r\n  pressedKeyboardKey,\r\n  gameCheck,\r\n}: PropsType): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n  const [isCorrectAnswer, setIsCorrectAnswer] = React.useState(false);\r\n  const [isWrongAnswer, setIsWrongAnswer] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    if (isNewGroupWords) {\r\n      setIsCorrectAnswer(false);\r\n      setIsWrongAnswer(false);\r\n    }\r\n  }, [isNewGroupWords]);\r\n\r\n  const onSomeWordClick = () => {\r\n    if (currentWord && isFirstClick) {\r\n      setIsNewGroupWords(false);\r\n      setIsShowAnswer(true);\r\n      setIsFirstClick(false);\r\n      if (word.word === currentWord.word) {\r\n        setIsCorrectAnswer(true);\r\n        sound.playSound(correctSound, soundVolume);\r\n        dispatch(pushCorrectAnswers(currentWord));\r\n      } else {\r\n        setIsWrongAnswer(true);\r\n        sound.playSound(wrongSound, soundVolume);\r\n        dispatch(pushWrongAnswers(currentWord));\r\n      }\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (!isShowAnswer && GAME_ANSWERS_CODES.includes(pressedKeyboardKey) && +pressedKeyboardKey === index + 1) {\r\n      onSomeWordClick();\r\n    }\r\n  }, [pressedKeyboardKey]);\r\n\r\n  return (\r\n    <div className={styles.word}>\r\n      <span\r\n        className={`${styles.button} ${\r\n          currentWord && isShowAnswer && word.word === currentWord.word ? styles.text : ''\r\n        }`}\r\n        role=\"button\"\r\n        tabIndex={0}\r\n        onClick={onSomeWordClick}\r\n      >\r\n        {!isNewGroupWords && isShowAnswer && isWrongAnswer && <Image width=\"10\" height=\"auto\" src={noImg} />}\r\n        {!isNewGroupWords && isShowAnswer && isCorrectAnswer && <Image width=\"20\" height=\"auto\" src={yesImg} />}\r\n        {gameCheck === 'ourGame' ? (\r\n          <>\r\n            <span className={styles.color}>{index + 1}</span> {word.word}\r\n          </>\r\n        ) : (\r\n          <>\r\n            <span className={styles.color}>{index + 1}</span> {word.wordTranslate}\r\n          </>\r\n        )}\r\n        {/* <span className={styles.color}>{index + 1}</span> {word.wordTranslate} */}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PossibleAnswer;\r\n\r\nPossibleAnswer.defaultProps = {\r\n  gameCheck: '',\r\n};\r\n","import React from 'react';\r\n\r\nconst ScrollToTopOnMount = (): null => {\r\n  React.useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  return null;\r\n};\r\nexport default ScrollToTopOnMount;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Image from 'react-bootstrap/Image';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Figure from 'react-bootstrap/Figure';\r\nimport volumeImg from '../../assets/icons/volume.svg';\r\nimport {\r\n  isGameEnd,\r\n  playWord,\r\n  playWords,\r\n  pushWrongAnswers,\r\n  setCurrentWord,\r\n  setCurrentWordIndex,\r\n  setPlayWordsArray,\r\n} from '../../features/game/gameSlice';\r\nimport { soundsVolume } from '../../features/games/gamesSlice';\r\nimport { sound } from '../../utils/sound';\r\nimport { ARROW_CODE, ENTER_CODE, games, PLUS_CODE, volume } from '../../constants/games';\r\nimport GameHeader from '../GameHeader/GameHeader';\r\nimport GameDescription from '../GameDescription/GameDescription';\r\nimport EndGame from '../EndGame/EndGame';\r\nimport PossibleAnswer from '../PossibleAnswer/PossibleAnswer';\r\nimport ScrollToTopOnMount from '../ScrollToTopOnMount/ScrollToTopOnMount';\r\nimport styles from './AudioCallGame.module.css';\r\n\r\nconst wrongSound = 'assets/sounds/wrong.mp3';\r\n\r\nconst text = {\r\n  color: '#000',\r\n  fontSize: '1.1rem',\r\n  fontWeight: 600,\r\n};\r\nconst gameField = {\r\n  backgroundColor: '#fdff95',\r\n  cursor: 'default',\r\n  minHeight: '100vh',\r\n};\r\nconst root = {\r\n  padding: 0,\r\n};\r\n\r\nconst AudioCallGame = (): JSX.Element => {\r\n  const gameRef = React.useRef() as React.MutableRefObject<HTMLInputElement>;\r\n\r\n  const words = useSelector(playWords);\r\n  const currentWord = useSelector(playWord);\r\n  const isAudioCallGameEnd = useSelector(isGameEnd);\r\n  const soundVolume = useSelector(soundsVolume);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [isShowAnswer, setIsShowAnswer] = React.useState(false);\r\n  const [isNewGroupWords, setIsNewGroupWords] = React.useState(false);\r\n  const [isFirstClick, setIsFirstClick] = React.useState(true);\r\n  const [pressedKeyboardKey, setPressedKeyboardKey] = React.useState('');\r\n  const [isKeyboardActive, setIsKeyboardActive] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    if (currentWord && !isAudioCallGameEnd) {\r\n      const soundUrl = `${process.env.REACT_APP_BASE_URL}/${currentWord.audio}`;\r\n      sound.playSound(soundUrl, volume);\r\n    }\r\n  }, [currentWord]);\r\n\r\n  const onSoundImgClick = () => {\r\n    if (currentWord) {\r\n      const soundUrl = `${process.env.REACT_APP_BASE_URL}/${currentWord.audio}`;\r\n      sound.playSound(soundUrl, volume);\r\n    }\r\n  };\r\n\r\n  const onDontKnowBtnClick = () => {\r\n    setIsFirstClick(false);\r\n    setIsNewGroupWords(false);\r\n    setIsShowAnswer(true);\r\n    sound.playSound(wrongSound, soundVolume);\r\n    if (currentWord) {\r\n      dispatch(pushWrongAnswers(currentWord));\r\n    }\r\n  };\r\n\r\n  const onNextBtnClick = () => {\r\n    setIsShowAnswer(false);\r\n    dispatch(setCurrentWordIndex());\r\n    dispatch(setCurrentWord());\r\n    dispatch(setPlayWordsArray());\r\n    setIsNewGroupWords(true);\r\n    setIsFirstClick(true);\r\n  };\r\n\r\n  const handlerOnKeyDown = (event: React.KeyboardEvent<HTMLElement>) => {\r\n    if (gameRef) {\r\n      setPressedKeyboardKey(event.key);\r\n      if (event.key === ENTER_CODE && !isShowAnswer) {\r\n        onDontKnowBtnClick();\r\n      } else if (event.key === ARROW_CODE && isShowAnswer) {\r\n        onNextBtnClick();\r\n      } else if (event.key === PLUS_CODE) {\r\n        onSoundImgClick();\r\n      }\r\n    }\r\n  };\r\n  const handlerOnFocus = () => {\r\n    setIsKeyboardActive(true);\r\n  };\r\n  const handlerOnBlur = () => {\r\n    setIsKeyboardActive(false);\r\n  };\r\n\r\n  return (\r\n    <Container fluid style={root}>\r\n      <ScrollToTopOnMount />\r\n      {!isAudioCallGameEnd && (\r\n        <div\r\n          ref={gameRef}\r\n          role=\"button\"\r\n          tabIndex={0}\r\n          onKeyDown={(event: React.KeyboardEvent<HTMLElement>) => handlerOnKeyDown(event)}\r\n          className={styles.gameField}\r\n          style={gameField}\r\n          onFocus={handlerOnFocus}\r\n          onBlur={handlerOnBlur}\r\n        >\r\n          <GameHeader color=\"none\" soundVolume={soundVolume} gameRef={gameRef} isKeyboardActive={isKeyboardActive} />\r\n          <Container fluid className={styles.container}>\r\n            {!isShowAnswer && (\r\n              <Row className={styles.heightWordImg}>\r\n                <Col lg={12} md={12} sm={12} xs={12}>\r\n                  <Image className={styles.img} width=\"60\" height=\"auto\" src={volumeImg} onClick={onSoundImgClick} />\r\n                </Col>\r\n              </Row>\r\n            )}\r\n            {isShowAnswer && currentWord && (\r\n              <Row className={styles.heightWordImg}>\r\n                <Col className={styles.left} lg={6} md={6} sm={6} xs={12}>\r\n                  <Image className={styles.img} width=\"50\" height=\"auto\" src={volumeImg} onClick={onSoundImgClick} />\r\n                </Col>\r\n                <Col className={styles.right} lg={6} md={6} sm={6} xs={12}>\r\n                  <Figure>\r\n                    <Figure.Image\r\n                      width=\"50%\"\r\n                      height=\"auto\"\r\n                      alt=\"рисунок для слова\"\r\n                      src={`${process.env.REACT_APP_BASE_URL}/${currentWord.image}`}\r\n                    />\r\n                    <Figure.Caption style={text}>{currentWord.word}</Figure.Caption>\r\n                  </Figure>\r\n                </Col>\r\n              </Row>\r\n            )}\r\n            <Row>\r\n              <Col className={styles.words} lg={12}>\r\n                {words &&\r\n                  words.map((word, index) => (\r\n                    <PossibleAnswer\r\n                      key={word.id}\r\n                      currentWord={currentWord}\r\n                      word={word}\r\n                      index={index}\r\n                      isShowAnswer={isShowAnswer}\r\n                      setIsShowAnswer={setIsShowAnswer}\r\n                      isNewGroupWords={isNewGroupWords}\r\n                      setIsNewGroupWords={setIsNewGroupWords}\r\n                      isFirstClick={isFirstClick}\r\n                      setIsFirstClick={setIsFirstClick}\r\n                      soundVolume={soundVolume}\r\n                      pressedKeyboardKey={pressedKeyboardKey}\r\n                    />\r\n                  ))}\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              {!isShowAnswer && (\r\n                <Col lg={12}>\r\n                  <Button onClick={onDontKnowBtnClick} variant=\"outline-dark\">\r\n                    Не знаю\r\n                  </Button>\r\n                </Col>\r\n              )}\r\n              {isShowAnswer && (\r\n                <Col lg={12}>\r\n                  <Button onClick={onNextBtnClick} variant=\"outline-dark\">\r\n                    Далее\r\n                  </Button>\r\n                </Col>\r\n              )}\r\n            </Row>\r\n            <div className={styles.description}>\r\n              <GameDescription />\r\n            </div>\r\n          </Container>\r\n        </div>\r\n      )}\r\n      {isAudioCallGameEnd && <EndGame color={games[0].color} />}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AudioCallGame;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { ProgressBar } from 'react-bootstrap';\r\n\r\ntype PropsType = {\r\n  now: number;\r\n  max: number;\r\n  className: string;\r\n  stopGame: () => void;\r\n};\r\n\r\nconst Progress = ({ now, max, className, stopGame }: PropsType): JSX.Element => {\r\n  const [time, setTime] = useState<number>(now);\r\n  const [color, setColor] = useState<string>('success');\r\n\r\n  useEffect(() => {\r\n    const interval = setTimeout(() => setTime(time - 0.125), 125);\r\n\r\n    const timeWarning = 0.66 * now;\r\n    const timeDanger = 0.33 * now;\r\n\r\n    if (time > timeDanger && time <= timeWarning) {\r\n      setColor('warning');\r\n    }\r\n    if (time >= 0 && time <= timeDanger) {\r\n      setColor('danger');\r\n    }\r\n    if (time === 0) {\r\n      stopGame();\r\n    }\r\n\r\n    return () => {\r\n      clearTimeout(interval);\r\n    };\r\n  }, [time]);\r\n\r\n  return <ProgressBar now={time} max={max} className={className} variant={color} />;\r\n};\r\n\r\nexport default Progress;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Image from 'react-bootstrap/Image';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Figure from 'react-bootstrap/Figure';\r\nimport volumeImg from '../../assets/icons/volume.svg';\r\nimport Progress from '../Progress/Progress';\r\nimport {\r\n  isGameEnd,\r\n  playWord,\r\n  playWords,\r\n  pushWrongAnswers,\r\n  setCurrentWord,\r\n  setCurrentWordIndex,\r\n  setPlayWordsArray,\r\n} from '../../features/game/gameSlice';\r\nimport { soundsVolume } from '../../features/games/gamesSlice';\r\nimport { sound } from '../../utils/sound';\r\nimport { ARROW_CODE, ENTER_CODE, games, PLUS_CODE, volume } from '../../constants/games';\r\nimport GameHeader from '../GameHeader/GameHeader';\r\nimport GameDescription from '../GameDescription/GameDescription';\r\nimport EndGame from '../EndGame/EndGame';\r\nimport PossibleAnswer from '../PossibleAnswer/PossibleAnswer';\r\nimport ScrollToTopOnMount from '../ScrollToTopOnMount/ScrollToTopOnMount';\r\nimport styles from './savannah.module.css';\r\n\r\nconst wrongSound = 'assets/sounds/wrong.mp3';\r\n\r\nconst text = {\r\n  color: '#000',\r\n  fontSize: '1.1rem',\r\n  fontWeight: 600,\r\n};\r\nconst gameField = {\r\n  backgroundColor: '#ffb5d8',\r\n  cursor: 'default',\r\n  minHeight: '100vh',\r\n};\r\nconst root = {\r\n  padding: 0,\r\n};\r\n\r\nconst Savannah = (): JSX.Element => {\r\n  const gameRef = React.useRef() as React.MutableRefObject<HTMLInputElement>;\r\n\r\n  const words = useSelector(playWords);\r\n  const currentWord = useSelector(playWord);\r\n  const isSavannahGameEnd = useSelector(isGameEnd);\r\n  const soundVolume = useSelector(soundsVolume);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [isShowAnswer, setIsShowAnswer] = React.useState(false);\r\n  const [isNewGroupWords, setIsNewGroupWords] = React.useState(false);\r\n  const [isFirstClick, setIsFirstClick] = React.useState(true);\r\n  const [pressedKeyboardKey, setPressedKeyboardKey] = React.useState('');\r\n  const [isKeyboardActive, setIsKeyboardActive] = React.useState(false);\r\n\r\n  const onSoundImgClick = () => {\r\n    if (currentWord) {\r\n      const soundUrl = `${process.env.REACT_APP_BASE_URL}/${currentWord.audio}`;\r\n      sound.playSound(soundUrl, volume);\r\n    }\r\n  };\r\n\r\n  const onDontKnowBtnClick = () => {\r\n    setIsFirstClick(false);\r\n    setIsNewGroupWords(false);\r\n    setIsShowAnswer(true);\r\n    sound.playSound(wrongSound, soundVolume);\r\n    if (currentWord) {\r\n      dispatch(pushWrongAnswers(currentWord));\r\n    }\r\n  };\r\n\r\n  const onNextBtnClick = () => {\r\n    setIsShowAnswer(false);\r\n    dispatch(setCurrentWordIndex());\r\n    dispatch(setCurrentWord());\r\n    dispatch(setPlayWordsArray());\r\n    setIsNewGroupWords(true);\r\n    setIsFirstClick(true);\r\n  };\r\n\r\n  const handlerOnKeyDown = (event: React.KeyboardEvent<HTMLElement>) => {\r\n    if (gameRef) {\r\n      setPressedKeyboardKey(event.key);\r\n      if (event.key === ENTER_CODE && !isShowAnswer) {\r\n        onDontKnowBtnClick();\r\n      } else if (event.key === ARROW_CODE && isShowAnswer) {\r\n        onNextBtnClick();\r\n      } else if (event.key === PLUS_CODE) {\r\n        onSoundImgClick();\r\n      }\r\n    }\r\n  };\r\n  const handlerOnFocus = () => {\r\n    setIsKeyboardActive(true);\r\n  };\r\n  const handlerOnBlur = () => {\r\n    setIsKeyboardActive(false);\r\n  };\r\n\r\n  return (\r\n    <Container fluid style={root}>\r\n      <ScrollToTopOnMount />\r\n      {!isSavannahGameEnd && (\r\n        <div\r\n          ref={gameRef}\r\n          role=\"button\"\r\n          tabIndex={0}\r\n          onKeyDown={(event: React.KeyboardEvent<HTMLElement>) => handlerOnKeyDown(event)}\r\n          className={styles.gameField}\r\n          style={gameField}\r\n          onFocus={handlerOnFocus}\r\n          onBlur={handlerOnBlur}\r\n        >\r\n          <GameHeader color=\"none\" soundVolume={soundVolume} gameRef={gameRef} isKeyboardActive={isKeyboardActive} />\r\n          <Container fluid className={styles.container}>\r\n            {!isShowAnswer && currentWord && (\r\n              <Row className={styles.heightWordImg}>\r\n                <Col lg={12} md={12} sm={12} xs={12}>\r\n                  <Progress now={7} max={7} className={styles.visualTimer} stopGame={onDontKnowBtnClick} />\r\n                </Col>\r\n                <Col style={text} lg={12} md={12} sm={12} xs={12}>\r\n                  {currentWord.word}\r\n                </Col>\r\n              </Row>\r\n            )}\r\n            {isShowAnswer && currentWord && (\r\n              <Row className={styles.heightWordImg}>\r\n                <Col className={styles.left} lg={6} md={6} sm={6} xs={12}>\r\n                  <Image className={styles.img} width=\"50\" height=\"auto\" src={volumeImg} onClick={onSoundImgClick} />\r\n                </Col>\r\n                <Col className={styles.right} lg={6} md={6} sm={6} xs={12}>\r\n                  <Figure>\r\n                    <Figure.Image\r\n                      width=\"50%\"\r\n                      height=\"auto\"\r\n                      alt=\"рисунок для слова\"\r\n                      src={`${process.env.REACT_APP_BASE_URL}/${currentWord.image}`}\r\n                    />\r\n                    <Figure.Caption style={text}>{currentWord.word}</Figure.Caption>\r\n                  </Figure>\r\n                </Col>\r\n              </Row>\r\n            )}\r\n            <Row>\r\n              <Col className={styles.words} lg={12}>\r\n                {words &&\r\n                  words.map((word, index) => (\r\n                    <PossibleAnswer\r\n                      key={word.id}\r\n                      currentWord={currentWord}\r\n                      word={word}\r\n                      index={index}\r\n                      isShowAnswer={isShowAnswer}\r\n                      setIsShowAnswer={setIsShowAnswer}\r\n                      isNewGroupWords={isNewGroupWords}\r\n                      setIsNewGroupWords={setIsNewGroupWords}\r\n                      isFirstClick={isFirstClick}\r\n                      setIsFirstClick={setIsFirstClick}\r\n                      soundVolume={soundVolume}\r\n                      pressedKeyboardKey={pressedKeyboardKey}\r\n                    />\r\n                  ))}\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              {!isShowAnswer && (\r\n                <Col lg={12}>\r\n                  <Button onClick={onDontKnowBtnClick} variant=\"outline-dark\">\r\n                    Не знаю\r\n                  </Button>\r\n                </Col>\r\n              )}\r\n              {isShowAnswer && (\r\n                <Col lg={12}>\r\n                  <Button onClick={onNextBtnClick} variant=\"outline-dark\">\r\n                    Далее\r\n                  </Button>\r\n                </Col>\r\n              )}\r\n            </Row>\r\n            <div className={styles.description}>\r\n              <GameDescription />\r\n            </div>\r\n          </Container>\r\n        </div>\r\n      )}\r\n      {isSavannahGameEnd && <EndGame color={games[2].color} />}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Savannah;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Container from 'react-bootstrap/Container';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport * as Icon from 'react-bootstrap-icons';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport styles from './GameHeader.module.css';\r\nimport { setInitSettings } from '../../features/game/gameSlice';\r\n\r\ntype PropsType = {\r\n  color: string;\r\n  gameRef: React.MutableRefObject<HTMLInputElement>;\r\n  isMuteSound: boolean | null;\r\n  setIsMuteSound: (mute: boolean) => void;\r\n};\r\n\r\nconst gameHeaderStyle = {\r\n  imgStyle: {\r\n    marginRight: '30px',\r\n    color: '#000',\r\n  },\r\n  heartStyle: {\r\n    margin: '0 10px 0 0',\r\n    color: '#000',\r\n  },\r\n};\r\n\r\nconst GameHeaderSprinter = ({ color, gameRef, isMuteSound, setIsMuteSound }: PropsType): JSX.Element => {\r\n  const [isFullScreen, setIsFullScreen] = React.useState(false);\r\n  const [isMute, setIsMute] = React.useState(isMuteSound);\r\n  const dispatch = useDispatch();\r\n\r\n  React.useEffect(() => {\r\n    if (!isFullScreen) {\r\n      if (document.fullscreenElement) {\r\n        document.exitFullscreen();\r\n      }\r\n    } else {\r\n      gameRef.current.requestFullscreen().catch((error) => {\r\n        // eslint-disable-next-line no-console\r\n        console.log(error);\r\n      });\r\n    }\r\n  }, [isFullScreen]);\r\n\r\n  const onCloseBtnClick = () => {\r\n    dispatch(setInitSettings());\r\n  };\r\n\r\n  const onFullScreenBtnClick = () => {\r\n    setIsFullScreen((isFullscreen) => !isFullscreen);\r\n  };\r\n\r\n  return (\r\n    <div className={styles[color]}>\r\n      <Container fluid className={styles.container}>\r\n        <Row>\r\n          <Col className={styles.left}>\r\n            <div\r\n              role=\"button\"\r\n              tabIndex={0}\r\n              onClick={() => {\r\n                setIsMuteSound(!isMuteSound);\r\n                setIsMute(!isMute);\r\n              }}\r\n              className={styles.img}\r\n              style={gameHeaderStyle.imgStyle}\r\n            >\r\n              {!isMute ? (\r\n                <Icon.VolumeUpFill />\r\n              ) : (\r\n                <Icon.VolumeMuteFill />\r\n              )}\r\n            </div>\r\n          </Col>\r\n          <Col className={styles.right}>\r\n            <div\r\n              role=\"button\"\r\n              tabIndex={0}\r\n              onClick={onFullScreenBtnClick}\r\n              style={gameHeaderStyle.imgStyle}\r\n              className={styles.img}\r\n            >\r\n              {isFullScreen ? (\r\n                <Icon.Fullscreen />\r\n              ) : (\r\n                <Icon.FullscreenExit />\r\n              )}\r\n            </div>\r\n            <NavLink to=\"/\">\r\n              <div className={styles.img} onClick={onCloseBtnClick} role=\"button\" tabIndex={0}>\r\n                <Icon.XSquare />\r\n              </div>\r\n            </NavLink>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameHeaderSprinter;\r\n","/* eslint-disable array-callback-return */\r\nimport { Word } from '../types';\r\n\r\nexport const createArrayEnAndRUWords = (wordList: Array<Word>): Array<Array<string>> => {\r\n  const resultRu: Array<string> = [];\r\n  const resultEn: Array<string> = [];\r\n\r\n  wordList.map((item: Word) => {\r\n    resultEn.push(item.word);\r\n    resultRu.push(item.wordTranslate);\r\n  });\r\n\r\n  return [resultEn, resultRu];\r\n};\r\n","import * as React from 'react';\r\nimport ReactHowler from 'react-howler';\r\n\r\ntype AudioPlayerProps = {\r\n  link: string;\r\n  playing: boolean;\r\n  format: Array<string>;\r\n  loop: boolean;\r\n  mute: boolean | null;\r\n};\r\n\r\nexport const AudioPlayer = ({ link, playing, format, loop, mute }: AudioPlayerProps): JSX.Element => (\r\n  <ReactHowler\r\n    src={link}\r\n    playing={playing}\r\n    format={format}\r\n    loop={loop}\r\n    mute={mute || false}\r\n    volume={0.5}\r\n    preload\r\n    html5\r\n  />\r\n);\r\n","import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport styles from './gameDescription.module.css';\r\n\r\nconst GameDescriptionSprinter = (): JSX.Element => (\r\n  <Container fluid className={styles.container}>\r\n    <p>Чтобы выбрать ответ &quot;Верно&quot;, нажми соответствующую клавишу &quot;Enter&quot;.</p>\r\n    <p>Чтобы выбрать ответ &quot;Не верно&quot;, нажми соответствующую клавишу &quot;Space&quot;.</p>\r\n    <p>По истечению слов игра закончится.</p>\r\n  </Container>\r\n);\r\n\r\nexport default GameDescriptionSprinter;\r\n","/* eslint-disable max-len */\r\n/* eslint-disable guard-for-in */\r\n/* eslint-disable no-restricted-syntax */\r\nimport React, { useState, useRef } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Button } from 'react-bootstrap';\r\nimport * as Icon from 'react-bootstrap-icons';\r\nimport {\r\n  isGameEnd,\r\n  playWords,\r\n  pushWrongAnswers,\r\n  pushCorrectAnswers,\r\n  setCurrentWordIndex,\r\n  setIsGameEnd,\r\n} from '../../features/game/gameSlice';\r\nimport { games } from '../../constants/games';\r\nimport GameHeaderSprinter from '../GameHeaderSprinter/GameHeaderSprinter';\r\nimport { createRandomArrRuWords } from '../../utils/createRandomArrRuWords';\r\nimport { createArrayEnAndRUWords } from '../../utils/createArrayEnWords';\r\nimport { AudioPlayer } from '../AudioPlayer/AudioPlayer';\r\nimport styles from './sprinter.module.scss';\r\nimport EndGame from '../EndGame/EndGame';\r\nimport GameDescriptionSprinter from '../GameDescriptionSprinter/GameDescriptionSprinter';\r\n\r\nconst gameField = {\r\n  cursor: 'default',\r\n  color: '#000',\r\n  backgroundColor: '#b5ffb4',\r\n};\r\n\r\nconst Sprinter = (): JSX.Element => {\r\n  const gameRef = React.useRef() as React.MutableRefObject<HTMLInputElement>;\r\n  const dispatch = useDispatch();\r\n\r\n  const words = useSelector(playWords);\r\n  const isEnd = useSelector(isGameEnd);\r\n\r\n  const randomArrayWords: Array<string> = createRandomArrRuWords(words);\r\n  const arrayEnWords: Array<string> = createArrayEnAndRUWords(words)[0];\r\n  const arrayRuWords: Array<string> = createArrayEnAndRUWords(words)[1];\r\n\r\n  const [isTrueWord, setIsTrueWord] = useState<boolean>(false);\r\n  const [ruWorsIndex, setRuWordIndex] = useState<number>(0);\r\n  const [enWorsIndex, setEnWordIndex] = useState<number>(0);\r\n  const [score, setSetScore] = useState<string>('Поехали!!');\r\n  const [answerTrueCount, setAnswerTrueCount] = useState<number>(0);\r\n  const [disable, setDisable] = useState<boolean>(false);\r\n  const [playSound, setPlaySound] = useState<boolean>(false);\r\n  const [audioUrl, setAudioUrl] = useState<string>(\r\n    'https://zvukipro.com/uploads/files/2021-02/1612332181_windows-xp-logon-sound.mp3',\r\n  );\r\n  const [border, setBorder] = useState(styles.borderGame);\r\n  const [opasity, setOpasity] = useState(styles.iconNoVisible);\r\n  const [opasityWord, setOpasityWord] = useState(true);\r\n\r\n  const iconRef = useRef() as React.MutableRefObject<HTMLInputElement>;\r\n  const contentRef = useRef() as React.MutableRefObject<HTMLInputElement>;\r\n  const muteRef = useRef<boolean | null>(false);\r\n\r\n  const stopGame = () => {\r\n    setPlaySound(false);\r\n    dispatch(setIsGameEnd(true));\r\n    return false;\r\n  };\r\n\r\n  const nextWord = (index: number): void => {\r\n    if (index < randomArrayWords.length) {\r\n      setRuWordIndex(index + 1);\r\n      setEnWordIndex(index + 1);\r\n    }\r\n  };\r\n\r\n  const showIcon = (): void => {\r\n    iconRef.current.style.opacity = '1';\r\n  };\r\n\r\n  const compareResults = (answer: boolean): void => {\r\n    if (ruWorsIndex === randomArrayWords.length) {\r\n      stopGame();\r\n    }\r\n    setDisable(true);\r\n    setOpasityWord(false);\r\n    const trueAnswer = arrayRuWords[ruWorsIndex] === randomArrayWords[ruWorsIndex];\r\n    dispatch(setCurrentWordIndex());\r\n    if (trueAnswer === answer) {\r\n      setAudioUrl('https://zvukipro.com/uploads/files/2019-12/1575881866_22b1d8c783a14eb.mp3');\r\n      dispatch(pushCorrectAnswers(words[ruWorsIndex]));\r\n      setTimeout(() => {\r\n        setDisable(false);\r\n        setBorder(styles.borderGame);\r\n        setOpasity(styles.iconNoVisible);\r\n        setOpasityWord(true);\r\n        nextWord(ruWorsIndex);\r\n      }, 800);\r\n      setAnswerTrueCount(answerTrueCount + 1);\r\n      setIsTrueWord(true);\r\n      setBorder(styles.borderTrue);\r\n      setOpasity(styles.iconVisible);\r\n      switch (true) {\r\n        case answerTrueCount >= 6: {\r\n          setSetScore('Превосходно');\r\n          break;\r\n        }\r\n        case answerTrueCount >= 3 && answerTrueCount < 6: {\r\n          setSetScore('Отлично');\r\n          break;\r\n        }\r\n        default: {\r\n          setSetScore('Не плохо');\r\n          break;\r\n        }\r\n      }\r\n      showIcon();\r\n    } else {\r\n      setAudioUrl('https://zvukipro.com/uploads/files/2018-10/1540309318_100-k-1-wrong-answer.mp3');\r\n      dispatch(pushWrongAnswers(words[ruWorsIndex]));\r\n      setTimeout(() => {\r\n        setDisable(false);\r\n        setBorder(styles.borderGame);\r\n        setOpasity(styles.iconNoVisible);\r\n        setOpasityWord(true);\r\n        nextWord(ruWorsIndex);\r\n      }, 800);\r\n      setIsTrueWord(false);\r\n      setAnswerTrueCount(0);\r\n      setBorder(styles.borderFalse);\r\n      setOpasity(styles.iconVisible);\r\n      showIcon();\r\n    }\r\n\r\n    if (ruWorsIndex === randomArrayWords.length - 1) {\r\n      stopGame();\r\n    }\r\n  };\r\n\r\n  const handlePlaySong = (): void => {\r\n    setPlaySound(true);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    const onKeypress = (e: any) => {\r\n      if (e.key === 'Enter') {\r\n        compareResults(true);\r\n        handlePlaySong();\r\n      }\r\n      if (e.key === ' ') {\r\n        compareResults(false);\r\n        handlePlaySong();\r\n      }\r\n    };\r\n    document.addEventListener('keypress', onKeypress);\r\n    return () => {\r\n      document.removeEventListener('keypress', onKeypress);\r\n    };\r\n  }, [ruWorsIndex, playSound]);\r\n\r\n  const handleMute = (mute: boolean): void => {\r\n    muteRef.current = mute;\r\n  };\r\n\r\n  const isSound = React.useMemo(() => {\r\n    if (muteRef.current === null) return false;\r\n    handlePlaySong();\r\n    return muteRef.current;\r\n  }, [muteRef.current, ruWorsIndex, answerTrueCount]);\r\n\r\n  return isEnd ? (\r\n    <EndGame color={games[1].color} />\r\n  ) : (\r\n    <div ref={gameRef} className={styles.sprinter} style={gameField}>\r\n      <div className={styles.header}>\r\n        <GameHeaderSprinter color=\"none\" gameRef={gameRef} isMuteSound={muteRef.current} setIsMuteSound={handleMute} />\r\n      </div>\r\n      <div className={`${border} ${styles.container}`}>\r\n        <div className={styles.info}>\r\n          <div className={styles.score}>\r\n            <div className={styles.value}>{score}</div>\r\n          </div>\r\n        </div>\r\n        <div ref={contentRef} className={styles.content}>\r\n          <div className={`${styles.word}`}>\r\n            <div className={styles.enWord}>{arrayEnWords[enWorsIndex]}</div>\r\n            <div\r\n              className={\r\n                opasityWord ? `${styles.ruWord} ${styles.ruWordVisible}` : `${styles.ruWord} ${styles.ruWordNoVisible}`\r\n              }\r\n            >\r\n              {randomArrayWords[ruWorsIndex]}\r\n            </div>\r\n          </div>\r\n          <div ref={iconRef} className={`${styles.iconWord} ${opasity}`}>\r\n            {isTrueWord ? (\r\n              <Icon.CheckCircleFill className={styles.iconTrue} />\r\n            ) : (\r\n              <Icon.XCircleFill className={styles.iconFalse} />\r\n            )}\r\n          </div>\r\n          <div className={styles.description}>\r\n            <GameDescriptionSprinter />\r\n          </div>\r\n          <div className={styles.answerBtn}>\r\n            <Button\r\n              className={styles.button}\r\n              variant=\"danger\"\r\n              disabled={ruWorsIndex === randomArrayWords.length || disable}\r\n              onClick={() => {\r\n                compareResults(false);\r\n                handlePlaySong();\r\n              }}\r\n            >\r\n              <AudioPlayer link={audioUrl} playing={playSound} format={['.mp3']} loop={false} mute={isSound} />\r\n              Не верно\r\n            </Button>\r\n            <Button\r\n              className={styles.button}\r\n              variant=\"success\"\r\n              disabled={ruWorsIndex === randomArrayWords.length || disable}\r\n              onClick={() => {\r\n                compareResults(true);\r\n                handlePlaySong();\r\n              }}\r\n            >\r\n              Верно\r\n            </Button>\r\n\r\n            <Icon.FullscreenExit className={styles.buttonFullScreen} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sprinter;\r\n","/* eslint-disable array-callback-return */\r\nimport { Word } from '../types';\r\n\r\nexport const createRandomArrRuWords = (wordList: Array<Word>): Array<string> => {\r\n  const result: Array<string> = [];\r\n  const randomHalfWordList: Array<string> = [];\r\n  let indexRandomHalf = 0;\r\n  for (let i = 0; i < wordList.length / 2; i++) {\r\n    let randomIndex = Math.floor(Math.random() * wordList.length);\r\n    while (randomHalfWordList.indexOf(wordList[randomIndex].wordTranslate) !== -1) {\r\n      randomIndex = Math.floor(Math.random() * wordList.length);\r\n    }\r\n    randomHalfWordList.push(wordList[randomIndex].wordTranslate);\r\n  }\r\n\r\n  wordList.map((item: Word) => {\r\n    if (randomHalfWordList.includes(item.wordTranslate)) {\r\n      result.push(randomHalfWordList[indexRandomHalf]);\r\n      indexRandomHalf += 1;\r\n    } else {\r\n      result.push(item.wordTranslate);\r\n    }\r\n  });\r\n\r\n  return result;\r\n};\r\n","/* eslint-disable react/no-array-index-key */\r\n/* eslint-disable react/no-danger */\r\n/* eslint-disable consistent-return */\r\n/* eslint-disable max-len */\r\nimport React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Container, Figure, Row, Col, Button } from 'react-bootstrap';\r\nimport {\r\n  isGameEnd,\r\n  playWord,\r\n  playWords,\r\n  pushWrongAnswers,\r\n  setCurrentWord,\r\n  setCurrentWordIndex,\r\n  setPlayWordsArray,\r\n  setIsGameEnd,\r\n} from '../../features/game/gameSlice';\r\nimport { soundsVolume } from '../../features/games/gamesSlice';\r\nimport { sound } from '../../utils/sound';\r\nimport { ARROW_CODE, ENTER_CODE, games } from '../../constants/games';\r\nimport GameHeader from '../GameHeader/GameHeader';\r\nimport GameDescription from '../GameDescription/GameDescription';\r\nimport EndGame from '../EndGame/EndGame';\r\nimport PossibleAnswer from '../PossibleAnswer/PossibleAnswer';\r\nimport ScrollToTopOnMount from '../ScrollToTopOnMount/ScrollToTopOnMount';\r\nimport styles from './ourGame.module.scss';\r\nimport { Word } from '../../types';\r\n\r\nconst wrongSound = 'assets/sounds/wrong.mp3';\r\n\r\nconst gameField = {\r\n  cursor: 'default',\r\n  backgroundColor: '#a6fff5',\r\n  minHeight: '100vh',\r\n  margin: 0,\r\n  paddin: 0,\r\n};\r\nconst root = {\r\n  padding: 0,\r\n};\r\n\r\nconst OurGame = (): JSX.Element => {\r\n  const gameRef = React.useRef() as React.MutableRefObject<HTMLInputElement>;\r\n\r\n  const words = useSelector(playWords);\r\n  const currentWord: Word | null = useSelector(playWord);\r\n  const isNewGameEnd = useSelector(isGameEnd);\r\n  const soundVolume = useSelector(soundsVolume);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [isShowAnswer, setIsShowAnswer] = React.useState(false);\r\n  const [isNewGroupWords, setIsNewGroupWords] = React.useState(false);\r\n  const [isFirstClick, setIsFirstClick] = React.useState(true);\r\n  const [pressedKeyboardKey, setPressedKeyboardKey] = React.useState('');\r\n  const [isKeyboardActive, setIsKeyboardActive] = React.useState(false);\r\n\r\n  const textWithCurrentWord = React.useMemo(() => {\r\n    let currentWordText: Array<string>;\r\n    if (currentWord === undefined) {\r\n      dispatch(setIsGameEnd(true));\r\n      return [''];\r\n    }\r\n    if (currentWord !== null) {\r\n      const currentWordWithTag = currentWord.textExample.match(/<b>[a-zA-Z]{1,}<\\/b>/);\r\n      let currentWordInOffer;\r\n      if (currentWordWithTag !== null) {\r\n        currentWordInOffer = currentWordWithTag[0].slice(3, currentWordWithTag.length - 5);\r\n      }\r\n\r\n      const currentWordTextArr = currentWord.textExample.split(`<b>${currentWordInOffer}</b>`);\r\n      if (currentWordTextArr[0] === undefined) {\r\n        currentWordText = [`<b>${currentWord.word}</b>`, currentWordTextArr[1]];\r\n      } else if (currentWordTextArr[1] === undefined) {\r\n        currentWordText = [currentWordTextArr[0], `<b>${currentWord.word}</b>`];\r\n      } else {\r\n        currentWordText = [currentWordTextArr[0], `<b>${currentWord.word}</b>`, currentWordTextArr[1]];\r\n      }\r\n    } else {\r\n      currentWordText = [''];\r\n    }\r\n    return currentWordText;\r\n  }, [currentWord]);\r\n\r\n  const onDontKnowBtnClick = () => {\r\n    setIsFirstClick(false);\r\n    setIsNewGroupWords(false);\r\n    setIsShowAnswer(true);\r\n    sound.playSound(wrongSound, soundVolume);\r\n    if (currentWord) {\r\n      dispatch(pushWrongAnswers(currentWord));\r\n    }\r\n  };\r\n\r\n  const onNextBtnClick = () => {\r\n    setIsShowAnswer(false);\r\n    dispatch(setCurrentWordIndex());\r\n    dispatch(setCurrentWord());\r\n    dispatch(setPlayWordsArray());\r\n    setIsNewGroupWords(true);\r\n    setIsFirstClick(true);\r\n  };\r\n\r\n  const handlerOnKeyDown = (event: React.KeyboardEvent<HTMLElement>) => {\r\n    if (gameRef) {\r\n      setPressedKeyboardKey(event.key);\r\n      if (event.key === ENTER_CODE && !isShowAnswer) {\r\n        onDontKnowBtnClick();\r\n      } else if (event.key === ARROW_CODE && isShowAnswer) {\r\n        onNextBtnClick();\r\n      }\r\n    }\r\n  };\r\n  const handlerOnFocus = () => {\r\n    setIsKeyboardActive(true);\r\n  };\r\n  const handlerOnBlur = () => {\r\n    setIsKeyboardActive(false);\r\n  };\r\n\r\n  return (\r\n    <Container fluid style={root}>\r\n      <ScrollToTopOnMount />\r\n      {!isNewGameEnd && (\r\n        <div\r\n          ref={gameRef}\r\n          role=\"button\"\r\n          tabIndex={0}\r\n          onKeyDown={(event: React.KeyboardEvent<HTMLElement>) => handlerOnKeyDown(event)}\r\n          className={styles.gameField}\r\n          style={gameField}\r\n          onFocus={handlerOnFocus}\r\n          onBlur={handlerOnBlur}\r\n        >\r\n          <GameHeader color=\"none\" soundVolume={soundVolume} gameRef={gameRef} isKeyboardActive={isKeyboardActive} />\r\n          <Container fluid className={styles.container}>\r\n            <Row className={styles.heightWordImg}>\r\n              <div className={styles.currentWord}>\r\n                {textWithCurrentWord.map((item, index) => {\r\n                  if (item.includes('<b>')) {\r\n                    return (\r\n                      <span\r\n                        key={index}\r\n                        className={isShowAnswer ? styles.wordCorrectly : styles.wordNoCorrectly}\r\n                        dangerouslySetInnerHTML={{ __html: `&nbsp;${item}&nbsp;` }}\r\n                      />\r\n                    );\r\n                  }\r\n                  return <span key={index}>{item}</span>;\r\n                })}\r\n              </div>\r\n              {isShowAnswer && currentWord && (\r\n                <Row className={styles.heightImg}>\r\n                  <Col className={styles.right} lg={6} md={6} sm={6} xs={12}>\r\n                    <Figure>\r\n                      <Figure.Image\r\n                        width=\"60%\"\r\n                        height=\"auto\"\r\n                        alt=\"рисунок для слова\"\r\n                        src={`${process.env.REACT_APP_BASE_URL}/${currentWord.image}`}\r\n                      />\r\n                    </Figure>\r\n                  </Col>\r\n                </Row>\r\n              )}\r\n            </Row>\r\n            <Row style={{ width: '70%' }}>\r\n              <Col className={styles.words} lg={12}>\r\n                {words &&\r\n                  words.map((word, index) => (\r\n                    <PossibleAnswer\r\n                      key={word.id}\r\n                      currentWord={currentWord}\r\n                      word={word}\r\n                      index={index}\r\n                      isShowAnswer={isShowAnswer}\r\n                      setIsShowAnswer={setIsShowAnswer}\r\n                      isNewGroupWords={isNewGroupWords}\r\n                      setIsNewGroupWords={setIsNewGroupWords}\r\n                      isFirstClick={isFirstClick}\r\n                      setIsFirstClick={setIsFirstClick}\r\n                      soundVolume={soundVolume}\r\n                      pressedKeyboardKey={pressedKeyboardKey}\r\n                      gameCheck=\"ourGame\"\r\n                    />\r\n                  ))}\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              {!isShowAnswer && (\r\n                <Col lg={12}>\r\n                  <Button onClick={onDontKnowBtnClick} variant=\"light\">\r\n                    Не знаю\r\n                  </Button>\r\n                </Col>\r\n              )}\r\n              {isShowAnswer && (\r\n                <Col lg={12}>\r\n                  <Button onClick={onNextBtnClick} variant=\"light\">\r\n                    Далее\r\n                  </Button>\r\n                </Col>\r\n              )}\r\n            </Row>\r\n            <div className={styles.description}>\r\n              <GameDescription gameCheck=\"ourGame\" />\r\n            </div>\r\n          </Container>\r\n        </div>\r\n      )}\r\n      {isNewGameEnd && <EndGame color={games[3].color} />}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default OurGame;\r\n","/* eslint-disable react/no-danger */\r\nimport React from 'react';\r\nimport { Container, Button, Spinner } from 'react-bootstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { games, volume } from '../../constants/games';\r\nimport {\r\n  setPlayWordsArray,\r\n  setCurrentWord,\r\n  fetchWords,\r\n  isLoading,\r\n  isPlaying,\r\n  setCurrentLevel,\r\n  currentLevel,\r\n  isGameOpenFromTextBook,\r\n  setIsPlaying,\r\n  currentGame,\r\n  setCurrentGame,\r\n  setOriginWordsArray,\r\n  originWordsArray,\r\n} from '../../features/game/gameSlice';\r\nimport AudioCallGame from '../AudioCallGame/AudioCallGame';\r\nimport Savannah from '../Savannah/Savannah';\r\nimport Sprinter from '../Sprinter/Sprinter';\r\nimport OurGame from '../OurGame/OurGame';\r\nimport { setSoundsVolume } from '../../features/games/gamesSlice';\r\nimport styles from './preStartInfo.module.scss';\r\n\r\nconst PreStartInfo = (): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n\r\n  const currentGameName = useSelector(currentGame);\r\n  const isGamePlaying = useSelector(isPlaying);\r\n  const isDataLoading = useSelector(isLoading);\r\n  const currentGameLevel = useSelector(currentLevel);\r\n  const isGameOpenFromBook = useSelector(isGameOpenFromTextBook);\r\n  const originWords = useSelector(originWordsArray);\r\n  const gameNameReverse = currentGameName.split('').reverse().join('');\r\n  const [indexGame, setIndexGame] = React.useState<number>(0);\r\n\r\n  React.useEffect(() => {\r\n    switch (currentGameName) {\r\n      case games[0].name: {\r\n        setIndexGame(0);\r\n        break;\r\n      }\r\n      case games[1].name: {\r\n        setIndexGame(1);\r\n        break;\r\n      }\r\n      case games[2].name: {\r\n        setIndexGame(2);\r\n        break;\r\n      }\r\n      case games[3].name: {\r\n        setIndexGame(3);\r\n        break;\r\n      }\r\n      default: {\r\n        // eslint-disable-next-line no-console\r\n        console.error(\"don't have game\");\r\n      }\r\n    }\r\n  }, [currentGameName]);\r\n\r\n  React.useEffect(() => {\r\n    if (window.localStorage.getItem('volume') !== null) {\r\n      const newVolume = localStorage.getItem('volume');\r\n      if (newVolume !== null) {\r\n        dispatch(setSoundsVolume(parseFloat(newVolume)));\r\n      }\r\n    } else {\r\n      window.localStorage.setItem('volume', volume.toString());\r\n    }\r\n  }, [dispatch]);\r\n\r\n  React.useEffect(() => {\r\n    if (currentGameName !== '' && isGamePlaying) {\r\n      if (!isGameOpenFromBook) {\r\n        if (window.localStorage.getItem(currentGameName) !== null) {\r\n          const newValue = localStorage.getItem(currentGameName);\r\n          if (newValue !== null) {\r\n            dispatch(setCurrentLevel(newValue));\r\n            dispatch(fetchWords(currentGameLevel));\r\n          }\r\n        }\r\n      } else {\r\n        dispatch(setOriginWordsArray(originWords));\r\n        dispatch(setPlayWordsArray());\r\n        dispatch(setCurrentWord());\r\n      }\r\n    }\r\n  }, [dispatch, isGamePlaying]);\r\n\r\n  const onPlayBtnClick = (game: string): void => {\r\n    dispatch(setCurrentGame(game));\r\n    dispatch(setIsPlaying(true));\r\n  };\r\n  return (\r\n    <>\r\n      {isDataLoading ? (\r\n        <Spinner animation=\"border\" className={styles.spinner} />\r\n      ) : (\r\n        <>\r\n          {isGamePlaying && currentGameName === games[0].name && <AudioCallGame />}\r\n          {isGamePlaying && currentGameName === games[1].name && <Sprinter />}\r\n          {isGamePlaying && currentGameName === games[2].name && <Savannah />}\r\n          {isGamePlaying && currentGameName === games[3].name && <OurGame />}\r\n\r\n          {!isGamePlaying && (\r\n            <div>\r\n              <img src={`${games[indexGame].img}`} alt=\"лес и горы\" className={styles.background} />\r\n              <Container fluid className={styles.container}>\r\n                <div className={styles.gameName}>\r\n                  <h2>{gameNameReverse.toUpperCase()}</h2>\r\n                  <h2>{currentGameName.toUpperCase()}</h2>\r\n                </div>\r\n\r\n                <div className={styles.description}>\r\n                  <span dangerouslySetInnerHTML={{ __html: games[indexGame].description }} />\r\n                </div>\r\n                <NavLink to=\"/\">\r\n                  <Button className={styles.startBtn}>В меню</Button>\r\n                </NavLink>\r\n\r\n                {currentGameName && (\r\n                  <Button className={styles.startBtn} onClick={() => onPlayBtnClick(currentGameName)}>\r\n                    Начать игру\r\n                  </Button>\r\n                )}\r\n              </Container>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PreStartInfo;\r\n","export default __webpack_public_path__ + \"static/media/1.787d8564.jpg\";","export default __webpack_public_path__ + \"static/media/2.836bfdc0.jpg\";","export default __webpack_public_path__ + \"static/media/3.d0fcabfa.jpg\";","import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport FigureItem from '../../components/FigureItem/FigureItem';\r\nimport photoImg1 from '../../assets/photo/1.jpg';\r\nimport photoImg2 from '../../assets/photo/2.jpg';\r\nimport photoImg3 from '../../assets/photo/3.jpg';\r\n\r\nconst margin = {\r\n  marginBottom: '2rem',\r\n};\r\nconst height = {\r\n  minHeight: 'calc(100vh - 116px - 142px - 50px)',\r\n};\r\n\r\nconst About = (): JSX.Element => (\r\n  <div style={height}>\r\n    <Container fluid>\r\n      <h4 style={margin}>Наша команда</h4>\r\n      <Container>\r\n        <Row>\r\n          <Col lg={4} md={6} sm={6}>\r\n            <FigureItem img={photoImg1} text=\"team lead, frontend\" name=\"Алексей Кульгейко\" />\r\n          </Col>\r\n          <Col lg={4} md={6} sm={6}>\r\n            <FigureItem img={photoImg2} text=\"backend, frontend\" name=\"Азимжон Бурхонов\" />\r\n          </Col>\r\n          <Col lg={4} md={12} sm={12}>\r\n            <FigureItem img={photoImg3} text=\"дизайн, frontend\" name=\"Евгения Куринёва\" />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Container>\r\n  </div>\r\n);\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nconst height = {\r\n  minHeight: 'calc(100vh - 116px - 142px - 100px)',\r\n};\r\nconst margin = {\r\n  marginTop: '2rem',\r\n};\r\n\r\nconst NotFound = (): JSX.Element => {\r\n  const location = useLocation();\r\n  return (\r\n    <div style={height}>\r\n      <Container fluid>\r\n        <h5 style={margin}>\r\n          К сожалению, для вашего запроса <code>{location.pathname}</code> ничего не найдено.\r\n        </h5>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","export const COLORS = ['yellow', 'green', 'red', 'purple', 'blue', 'violet'];\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { COLORS } from '../../constants/textbook';\r\n\r\nimport './style.scss';\r\n\r\nexport default function Textbook(): JSX.Element {\r\n  const groupCards = COLORS.map((color, index) => (\r\n    <NavLink to={`/groups/${index}`} className={color} key={color}>\r\n      <h6 className=\"group-title\">Уровень сложности {index}</h6>\r\n      <img className=\"group-img\" alt=\"group\" src={`${process.env.PUBLIC_URL}/img/group${index}.png`} />\r\n    </NavLink>\r\n  ));\r\n\r\n  return (\r\n    <div className=\"textbook\">\r\n      <h4 className=\"title\">Учебник</h4>\r\n      <div className=\"groups\">{groupCards}</div>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { Status, StorageKey, EntityState } from '../types';\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nexport function useRequest<T>(fetch: () => Promise<T>, dependencies: any[] = []): EntityState<T> {\r\n  const [data, setData] = useState<T | null>(null);\r\n  const [error, setError] = useState(undefined);\r\n  const [status, setStatus] = useState(Status.Idle);\r\n\r\n  useEffect(() => {\r\n    async function fetchAndSetData() {\r\n      setStatus(Status.Loading);\r\n      const fetchedData = await fetch();\r\n      setData(fetchedData);\r\n      setStatus(Status.Succeeded);\r\n    }\r\n    async function run() {\r\n      try {\r\n        await fetchAndSetData();\r\n      } catch (e) {\r\n        setData(null);\r\n        setStatus(Status.Failed);\r\n        setError(e.response.data);\r\n      }\r\n    }\r\n    run();\r\n  }, dependencies);\r\n\r\n  return {\r\n    status,\r\n    data,\r\n    error,\r\n  };\r\n}\r\n\r\ninterface PaginationProps {\r\n  pageCount: number;\r\n  storageKey: StorageKey;\r\n}\r\n\r\ninterface PaginationResult {\r\n  currentPage: number;\r\n  openNextPage: () => void;\r\n  openPreviousPage: () => void;\r\n}\r\n\r\nexport function usePagination({ pageCount, storageKey }: PaginationProps): PaginationResult {\r\n  const storedPage = localStorage.getItem(storageKey);\r\n  const initialPage = storedPage ? Number(storedPage) : 0;\r\n  const [currentPage, setCurrentPage] = useState(initialPage);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(storageKey, String(currentPage));\r\n  }, [currentPage]);\r\n\r\n  function openNextPage() {\r\n    if (currentPage < pageCount - 1) {\r\n      setCurrentPage(currentPage + 1);\r\n    }\r\n  }\r\n\r\n  function openPreviousPage() {\r\n    if (currentPage > 0) {\r\n      setCurrentPage(currentPage - 1);\r\n    }\r\n  }\r\n\r\n  return { currentPage, openNextPage, openPreviousPage };\r\n}\r\n","import axios from 'axios';\r\nimport { Word, UserAggregatedWord } from '../types';\r\n\r\nexport async function fetchWords({ group = 0, page = 0 }: { group?: number; page?: number }): Promise<Word[]> {\r\n  const response = await axios.get('/words', {\r\n    params: {\r\n      group,\r\n      page,\r\n    },\r\n  });\r\n  return response.data;\r\n}\r\n\r\nexport async function fetchUserAggregatedWords({\r\n  group,\r\n  userId,\r\n  filter,\r\n}: {\r\n  group: number;\r\n  userId: string;\r\n  filter: string;\r\n}): Promise<UserAggregatedWord[]> {\r\n  const response = await axios.get(`/users/${userId}/aggregatedWords`, {\r\n    params: {\r\n      group,\r\n      page: 0,\r\n      wordsPerPage: 20,\r\n      filter,\r\n    },\r\n  });\r\n  return response.data[0].paginatedResults;\r\n}\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { VolumeUpFill } from 'react-bootstrap-icons';\r\nimport { sound } from '../../../utils/sound';\r\nimport { volume } from '../../../constants/games';\r\n\r\ninterface Props {\r\n  iconSize: number;\r\n  soundPath: string;\r\n}\r\n\r\nexport default function SoundButton(props: Props): JSX.Element {\r\n  const { iconSize, soundPath } = props;\r\n  return (\r\n    <Button\r\n      variant=\"light\"\r\n      onClick={() => {\r\n        const soundUrl = `${process.env.REACT_APP_BASE_URL}/${soundPath}`;\r\n        sound.playSound(soundUrl, volume);\r\n      }}\r\n    >\r\n      <VolumeUpFill size={iconSize} />\r\n    </Button>\r\n  );\r\n}\r\n","import React, { useEffect, useReducer } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { DictionaryType, Difficulty, UserAggregatedWord, UserWord, Word } from '../../../types';\r\nimport { AuthState } from '../../../features/auth/authSlice';\r\nimport WordCard from './WordCard';\r\nimport { games } from '../../../constants/games';\r\nimport { setCurrentGame, setIsGameOpenFromTextBook, setOriginWordsArray } from '../../../features/game/gameSlice';\r\n\r\ninterface Props {\r\n  wordsData: Word[];\r\n  userAggregatedWordsData: UserAggregatedWord[] | null;\r\n  authData: AuthState['data'];\r\n  dictionaryType: DictionaryType | undefined;\r\n}\r\n\r\nenum WordActionType {\r\n  SET_AGGREGATED_WORDS = 'set_aggregated_words',\r\n  DELETE_WORD_FROM_LIST = 'delete_word_from_list',\r\n  ADD_HARD_WORD_LABEL = 'add_hard_word_label',\r\n}\r\n\r\ntype Action =\r\n  | { type: WordActionType.SET_AGGREGATED_WORDS; words: UserAggregatedWord[] }\r\n  | { type: WordActionType.DELETE_WORD_FROM_LIST; wordId: string }\r\n  | { type: WordActionType.ADD_HARD_WORD_LABEL; wordId: string };\r\n\r\ninterface ActiveWord {\r\n  wordId: string;\r\n  wordData: Word;\r\n  userWord: UserWord | undefined;\r\n  userId: string | undefined;\r\n}\r\n\r\nfunction aggregatedWordsReducer(state: UserAggregatedWord[] | null, action: Action) {\r\n  switch (action.type) {\r\n    case WordActionType.SET_AGGREGATED_WORDS: {\r\n      return action.words;\r\n    }\r\n\r\n    case WordActionType.DELETE_WORD_FROM_LIST: {\r\n      if (state == null) {\r\n        return state;\r\n      }\r\n      const indexToDelete = state.findIndex(\r\n        (userAggregatedWord: UserAggregatedWord) => userAggregatedWord._id === action.wordId,\r\n      );\r\n      if (indexToDelete < 0) {\r\n        return state;\r\n      }\r\n      const foundWord = state[indexToDelete];\r\n      const deletedWord = {\r\n        ...foundWord,\r\n        userWord: {\r\n          ...(foundWord.userWord || {}),\r\n          optional: { ...(foundWord.userWord?.optional || {}), isDeleted: true, isRestored: true },\r\n        },\r\n      };\r\n      return [...state.slice(0, indexToDelete), deletedWord, ...state.slice(indexToDelete + 1)];\r\n    }\r\n\r\n    case WordActionType.ADD_HARD_WORD_LABEL: {\r\n      if (state == null) {\r\n        return state;\r\n      }\r\n      const indexToUpdate = state.findIndex(\r\n        (userAggregatedWord: UserAggregatedWord) => userAggregatedWord._id === action.wordId,\r\n      );\r\n      if (indexToUpdate < 0) {\r\n        return state;\r\n      }\r\n      const foundWord = state[indexToUpdate];\r\n      const updatedWord = { ...foundWord, userWord: { ...foundWord.userWord, difficulty: Difficulty.Hard } };\r\n      return [...state.slice(0, indexToUpdate), updatedWord, ...state.slice(indexToUpdate)];\r\n    }\r\n\r\n    default: {\r\n      throw new Error(`Unsupported action: ${action}`);\r\n    }\r\n  }\r\n}\r\n\r\nexport default function WordCards(props: Props): JSX.Element {\r\n  const { wordsData, userAggregatedWordsData, authData, dictionaryType } = props;\r\n  const dispatch = useDispatch();\r\n  const [aggregatedWords, dispatchWordAction] = useReducer(aggregatedWordsReducer, userAggregatedWordsData || []);\r\n  useEffect(() => {\r\n    if (userAggregatedWordsData) {\r\n      dispatchWordAction({ type: WordActionType.SET_AGGREGATED_WORDS, words: userAggregatedWordsData });\r\n    }\r\n  }, [userAggregatedWordsData]);\r\n  const activeWords = wordsData.reduce((wordsAcc: ActiveWord[], wordData) => {\r\n    const wordId = wordData.id;\r\n    const userWord = aggregatedWords?.find(\r\n      (userAggregatedWord: UserAggregatedWord) => userAggregatedWord._id === wordId,\r\n    )?.userWord;\r\n    if (userWord?.optional?.isDeleted) {\r\n      if (dictionaryType === DictionaryType.Deleted) {\r\n        if (userWord.optional.isRestored) {\r\n          return wordsAcc;\r\n        }\r\n      } else {\r\n        return wordsAcc;\r\n      }\r\n    }\r\n    const currentWord = {\r\n      wordId,\r\n      wordData,\r\n      userWord,\r\n      userId: authData?.userId,\r\n    };\r\n    return [...wordsAcc, currentWord];\r\n  }, []);\r\n\r\n  const cardElements = activeWords.map((word: ActiveWord) => {\r\n    const { wordId, wordData, userWord, userId } = word;\r\n    function deleteWordFromList() {\r\n      dispatchWordAction({ type: WordActionType.DELETE_WORD_FROM_LIST, wordId });\r\n    }\r\n    function addHardWordLabel() {\r\n      dispatchWordAction({ type: WordActionType.ADD_HARD_WORD_LABEL, wordId });\r\n    }\r\n    return (\r\n      <WordCard\r\n        key={`${wordId}`}\r\n        wordData={wordData}\r\n        userWord={userWord}\r\n        userId={userId}\r\n        addHardWordLabel={addHardWordLabel}\r\n        deleteWordFromList={deleteWordFromList}\r\n        dictionaryType={dictionaryType}\r\n      />\r\n    );\r\n  });\r\n\r\n  const onGameClick = (gameName: string): void => {\r\n    dispatch(setIsGameOpenFromTextBook(true));\r\n    dispatch(setCurrentGame(gameName));\r\n    dispatch(setOriginWordsArray(activeWords.map((activeWord) => activeWord.wordData)));\r\n  };\r\n  return (\r\n    <Container fluid>\r\n      <Container>\r\n        {cardElements.length >= 10 && (\r\n          <Row>\r\n            {games.map((game) => (\r\n              <NavLink key={game.name} to=\"/prestart\" className=\"game\">\r\n                <Col\r\n                  sm={3}\r\n                  xs={6}\r\n                  onClick={() => {\r\n                    onGameClick(game.name);\r\n                  }}\r\n                >\r\n                  {game.nameRU}\r\n                </Col>\r\n              </NavLink>\r\n            ))}\r\n          </Row>\r\n        )}\r\n        {cardElements.length < 10 && (\r\n          <Row>\r\n            <p>Для игр недостаточно слов.</p>\r\n          </Row>\r\n        )}\r\n      </Container>\r\n      <div className=\"cards\">{cardElements}</div>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { Button, Col, Row } from 'react-bootstrap';\r\nimport { ArrowRepeat, ExclamationTriangle, X } from 'react-bootstrap-icons';\r\nimport axios from 'axios';\r\nimport { DictionaryType, Difficulty, UserWord } from '../../../types';\r\nimport InlineSpinner from '../../../components/InlineSpinner';\r\n\r\ninterface Props {\r\n  userId: string;\r\n  wordId: string;\r\n  userWord: UserWord | undefined;\r\n  addHardWordLabel: () => void;\r\n  deleteWordFromList: () => void;\r\n  dictionaryType: DictionaryType | undefined;\r\n}\r\n\r\nasync function createUserWord({ userId, wordId, userWord }: { userId: string; wordId: string; userWord: UserWord }) {\r\n  const response = await axios.post(`users/${userId}/words/${wordId}`, userWord);\r\n  return response.data;\r\n}\r\n\r\nasync function updateUserWord({ userId, wordId, userWord }: { userId: string; wordId: string; userWord: UserWord }) {\r\n  const response = await axios.put(`users/${userId}/words/${wordId}`, userWord);\r\n  return response.data;\r\n}\r\n\r\nexport default function WordControls(props: Props): JSX.Element {\r\n  const { userId, wordId, userWord, addHardWordLabel, deleteWordFromList, dictionaryType } = props;\r\n  const [isAddingToHardWords, setIsAddingToHardWords] = useState(false);\r\n  const [isDeletingFromList, setIsDeletingFromList] = useState(false);\r\n  const [isRestoring, setIsRestoring] = useState(false);\r\n  const inlineSpinner = <InlineSpinner size=\".8rem\" />;\r\n  const isMounted = useRef(true);\r\n  useEffect(\r\n    () => () => {\r\n      isMounted.current = false;\r\n    },\r\n    [],\r\n  );\r\n  let controls;\r\n  if (dictionaryType === DictionaryType.Difficult) {\r\n    controls = (\r\n      <Col>\r\n        <Button\r\n          variant=\"outline-secondary\"\r\n          onClick={async () => {\r\n            setIsRestoring(true);\r\n            try {\r\n              if (userWord) {\r\n                const newUserWord = { ...userWord, difficulty: Difficulty.Easy };\r\n                await updateUserWord({ userId, wordId, userWord: newUserWord });\r\n              }\r\n              deleteWordFromList();\r\n            } catch (e) {\r\n              // eslint-disable-next-line no-console\r\n              console.error(e);\r\n            } finally {\r\n              setIsRestoring(false);\r\n            }\r\n          }}\r\n          disabled={isRestoring}\r\n        >\r\n          {isRestoring ? inlineSpinner : <ArrowRepeat />}\r\n          &nbsp; Восстановить\r\n        </Button>\r\n      </Col>\r\n    );\r\n  } else if (dictionaryType === DictionaryType.Deleted) {\r\n    controls = (\r\n      <Col>\r\n        <Button\r\n          variant=\"outline-secondary\"\r\n          onClick={async () => {\r\n            setIsRestoring(true);\r\n            try {\r\n              if (userWord) {\r\n                const newUserWord = { ...userWord, optional: { ...userWord.optional, isDeleted: false } };\r\n                await updateUserWord({ userId, wordId, userWord: newUserWord });\r\n              }\r\n              deleteWordFromList();\r\n            } catch (e) {\r\n              // eslint-disable-next-line no-console\r\n              console.error(e);\r\n            } finally {\r\n              setIsRestoring(false);\r\n            }\r\n          }}\r\n          disabled={isRestoring}\r\n        >\r\n          {isRestoring ? inlineSpinner : <ArrowRepeat />}\r\n          &nbsp; Восстановить\r\n        </Button>\r\n      </Col>\r\n    );\r\n  } else {\r\n    controls = (\r\n      <>\r\n        <Col>\r\n          <Button\r\n            variant=\"outline-danger\"\r\n            onClick={async () => {\r\n              setIsAddingToHardWords(true);\r\n              try {\r\n                if (userWord) {\r\n                  const newUserWord = { ...userWord, difficulty: Difficulty.Hard };\r\n                  await updateUserWord({ userId, wordId, userWord: newUserWord });\r\n                } else {\r\n                  const newUserWord = { difficulty: Difficulty.Hard };\r\n                  await createUserWord({ userId, wordId, userWord: newUserWord });\r\n                }\r\n                addHardWordLabel();\r\n              } catch (e) {\r\n                // eslint-disable-next-line no-console\r\n                console.error(e);\r\n              } finally {\r\n                setIsAddingToHardWords(false);\r\n              }\r\n            }}\r\n            disabled={isAddingToHardWords || isDeletingFromList}\r\n          >\r\n            {isAddingToHardWords ? inlineSpinner : <ExclamationTriangle />}\r\n            &nbsp; Сложные слова\r\n          </Button>\r\n        </Col>\r\n        <Col>\r\n          <Button\r\n            variant=\"outline-dark\"\r\n            onClick={async () => {\r\n              setIsDeletingFromList(true);\r\n              try {\r\n                if (userWord) {\r\n                  const newUserWord = { ...userWord, optional: { isDeleted: true } };\r\n                  await updateUserWord({ userId, wordId, userWord: newUserWord });\r\n                } else {\r\n                  const newUserWord = { optional: { isDeleted: true } };\r\n                  await createUserWord({ userId, wordId, userWord: newUserWord });\r\n                }\r\n                if (isMounted.current) {\r\n                  deleteWordFromList();\r\n                }\r\n              } catch (e) {\r\n                // eslint-disable-next-line no-console\r\n                console.error(e);\r\n              } finally {\r\n                setIsDeletingFromList(false);\r\n              }\r\n            }}\r\n            disabled={isDeletingFromList || isAddingToHardWords}\r\n          >\r\n            {isDeletingFromList ? inlineSpinner : <X size={20} />}\r\n            &nbsp; Удаленные слова\r\n          </Button>\r\n        </Col>\r\n      </>\r\n    );\r\n  }\r\n  return <Row>{controls}</Row>;\r\n}\r\n","/* eslint-disable react/no-danger */\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Button, Card, Col, Container, Row } from 'react-bootstrap';\r\nimport { ExclamationTriangle } from 'react-bootstrap-icons';\r\nimport SoundButton from './SoundButton';\r\nimport WordControls from './WordControls';\r\nimport { DictionaryType, Difficulty, UserWord, Word } from '../../../types';\r\nimport { selectSettingsData } from '../../../features/settings/settingsSlice';\r\n\r\ninterface Props {\r\n  wordData: Word;\r\n  userWord: UserWord | undefined;\r\n  userId: string | undefined;\r\n  addHardWordLabel: () => void;\r\n  deleteWordFromList: () => void;\r\n  dictionaryType: DictionaryType | undefined;\r\n}\r\n\r\nexport default function WordCard(props: Props): JSX.Element {\r\n  const settingsData = useSelector(selectSettingsData);\r\n  const { showTranslations = true, showControls = true } = settingsData?.optional || {};\r\n  const { wordData, userWord, userId, addHardWordLabel, deleteWordFromList, dictionaryType } = props;\r\n  const {\r\n    id,\r\n    image,\r\n    word,\r\n    transcription,\r\n    wordTranslate,\r\n    textMeaning,\r\n    textMeaningTranslate,\r\n    textExample,\r\n    textExampleTranslate,\r\n    audio,\r\n    audioMeaning,\r\n    audioExample,\r\n  } = wordData;\r\n\r\n  const difficultWordlabel =\r\n    userWord && userWord.difficulty === Difficulty.Hard ? (\r\n      <Button variant=\"light\">\r\n        <ExclamationTriangle size={20} color=\"#ff0303\" />\r\n      </Button>\r\n    ) : null;\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Body>\r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              <Card.Img src={`${process.env.REACT_APP_BASE_URL}/${image}`} />\r\n            </Col>\r\n            <Col>\r\n              <Row>\r\n                <Col>\r\n                  <SoundButton iconSize={20} soundPath={audio} />\r\n                </Col>\r\n                <Col>{difficultWordlabel}</Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <p>\r\n                    <strong>{word}</strong>\r\n                  </p>\r\n                  <p>{transcription}</p>\r\n                  {showTranslations ? <p>{wordTranslate}</p> : null}\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"middle\">\r\n            <Col>\r\n              <p>\r\n                <SoundButton iconSize={16} soundPath={audioMeaning} />\r\n                &nbsp;\r\n                <strong dangerouslySetInnerHTML={{ __html: textMeaning }} />\r\n              </p>\r\n              {showTranslations ? <p>→ {textMeaningTranslate}</p> : null}\r\n              <p>\r\n                <SoundButton iconSize={16} soundPath={audioExample} />\r\n                &nbsp;\r\n                <strong dangerouslySetInnerHTML={{ __html: textExample }} />\r\n              </p>\r\n              {showTranslations ? <p>→ {textExampleTranslate}</p> : null}\r\n            </Col>\r\n          </Row>\r\n          {userId && showControls && (\r\n            <WordControls\r\n              userId={userId}\r\n              wordId={id}\r\n              userWord={userWord}\r\n              addHardWordLabel={addHardWordLabel}\r\n              deleteWordFromList={deleteWordFromList}\r\n              dictionaryType={dictionaryType}\r\n            />\r\n          )}\r\n        </Container>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { ArrowLeft, ArrowRight } from 'react-bootstrap-icons';\r\n\r\ninterface Props {\r\n  currentPage: number;\r\n  onPreviousClick: () => void;\r\n  onNextClick: () => void;\r\n}\r\n\r\nexport default function Pagination(props: Props): JSX.Element {\r\n  const { onPreviousClick, onNextClick, currentPage } = props;\r\n  const displayedPageNumber = currentPage + 1;\r\n  return (\r\n    <p className=\"page-number\">\r\n      <Button variant=\"light\">\r\n        <ArrowLeft onClick={onPreviousClick} />\r\n      </Button>\r\n      &nbsp;&nbsp;\r\n      {displayedPageNumber}\r\n      &nbsp;&nbsp;\r\n      <Button variant=\"light\">\r\n        <ArrowRight onClick={onNextClick} />\r\n      </Button>\r\n    </p>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { DictionaryType, Status, StorageKey, UserAggregatedWord, Word } from '../../types';\r\nimport { usePagination, useRequest } from '../../hooks';\r\nimport { fetchUserAggregatedWords, fetchWords } from '../../api';\r\nimport { selectAuthData, selectAuthStatus } from '../../features/auth/authSlice';\r\nimport WordCards from './components/WordCards';\r\nimport Pagination from './components/Pagination';\r\nimport { COLORS } from '../../constants/textbook';\r\n\r\nimport './style.scss';\r\n\r\ninterface MatchParams {\r\n  groupId: string;\r\n  type?: DictionaryType;\r\n}\r\n\r\ntype Props = RouteComponentProps<MatchParams>;\r\n\r\nexport default function Group(props: Props): JSX.Element {\r\n  const { match } = props;\r\n  const { groupId, type: dictionaryType } = match.params;\r\n  const authData = useSelector(selectAuthData);\r\n  const authStatus = useSelector(selectAuthStatus);\r\n\r\n  const { currentPage, openPreviousPage, openNextPage } = usePagination({\r\n    pageCount: 30,\r\n    storageKey: StorageKey.GroupPageIndex,\r\n  });\r\n\r\n  const boundedFetchWords = fetchWords.bind(null, { group: Number(groupId), page: currentPage });\r\n  const { status: wordsStatus, data: wordsData, error: wordsError } = useRequest<Word[]>(boundedFetchWords, [\r\n    currentPage,\r\n  ]);\r\n\r\n  const boundedFetchUserAggregatedWords = async () => {\r\n    let filter;\r\n    if (dictionaryType === DictionaryType.Difficult) {\r\n      filter = `{\"$and\":[{\"page\":${currentPage}, \"userWord.difficulty\":\"HARD\"}]}`;\r\n    } else if (dictionaryType === DictionaryType.Deleted) {\r\n      filter = `{\"$and\":[{\"page\":${currentPage}, \"userWord.optional.isDeleted\":true}]}`;\r\n    } else {\r\n      filter = `{\"page\":{\"$eq\":${currentPage}}}`;\r\n    }\r\n    if (authStatus === Status.Authorized && authData) {\r\n      const response = await fetchUserAggregatedWords({\r\n        group: Number(groupId),\r\n        userId: authData.userId,\r\n        filter,\r\n      });\r\n      return response;\r\n    }\r\n    return null;\r\n  };\r\n  const {\r\n    status: userAggregatedWordsStatus,\r\n    data: userAggregatedWordsData,\r\n    error: userAggregatedWordsError,\r\n  } = useRequest<UserAggregatedWord[] | null>(boundedFetchUserAggregatedWords, [\r\n    authStatus,\r\n    currentPage,\r\n    dictionaryType,\r\n  ]);\r\n\r\n  const entityStatuses = [wordsStatus, userAggregatedWordsStatus];\r\n  const isLoadingSomeData = entityStatuses.some((status) => [Status.Idle, Status.Loading].includes(status));\r\n  const hasSomeError = entityStatuses.some((status) => status === Status.Failed);\r\n  const hasLoadedAllData = entityStatuses.every((status) => status === Status.Succeeded);\r\n\r\n  let content = null;\r\n  if (isLoadingSomeData) {\r\n    content = 'Загрузка';\r\n  } else if (hasSomeError) {\r\n    if (wordsError || userAggregatedWordsError) {\r\n      content = <p>Error: {wordsError || userAggregatedWordsError}</p>;\r\n    }\r\n  } else if (hasLoadedAllData) {\r\n    if (wordsData && userAggregatedWordsData) {\r\n      let currentWords;\r\n      if (dictionaryType) {\r\n        currentWords = wordsData.filter((wordData) => {\r\n          const wordId = wordData.id;\r\n          return userAggregatedWordsData.some((userAggregatedWord) => userAggregatedWord._id === wordId);\r\n        });\r\n      } else {\r\n        currentWords = wordsData;\r\n      }\r\n      content = (\r\n        <div>\r\n          <WordCards\r\n            wordsData={currentWords}\r\n            userAggregatedWordsData={userAggregatedWordsData}\r\n            authData={authData}\r\n            dictionaryType={dictionaryType}\r\n          />\r\n          <Pagination currentPage={currentPage} onPreviousClick={openPreviousPage} onNextClick={openNextPage} />\r\n        </div>\r\n      );\r\n    } else if (wordsData && !userAggregatedWordsData) {\r\n      content = (\r\n        <div>\r\n          <WordCards\r\n            wordsData={wordsData}\r\n            userAggregatedWordsData={userAggregatedWordsData}\r\n            authData={authData}\r\n            dictionaryType={dictionaryType}\r\n          />\r\n          <Pagination currentPage={currentPage} onPreviousClick={openPreviousPage} onNextClick={openNextPage} />\r\n        </div>\r\n      );\r\n    }\r\n  } else {\r\n    throw new Error('Unmatched case');\r\n  }\r\n\r\n  return (\r\n    <div className=\"group-page\">\r\n      <h3 className={COLORS[Number(groupId)]}>Уровень сложности {groupId}</h3>\r\n      {content}\r\n    </div>\r\n  );\r\n}\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { AppThunk, RootState } from '../../app/store';\r\n\r\ninterface CounterState {\r\n  value: number;\r\n}\r\n\r\nconst initialState: CounterState = {\r\n  value: 0,\r\n};\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState,\r\n  reducers: {\r\n    increment: (state) => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1;\r\n    },\r\n    decrement: (state) => {\r\n      state.value -= 1;\r\n    },\r\n    // Use the PayloadAction type to declare the contents of `action.payload`\r\n    incrementByAmount: (state, action: PayloadAction<number>) => {\r\n      state.value += action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\nexport const incrementAsync = (amount: number): AppThunk => (dispatch) => {\r\n  setTimeout(() => {\r\n    dispatch(incrementByAmount(amount));\r\n  }, 1000);\r\n};\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\r\nexport const selectCount = (state: RootState): number => state.counter.value;\r\n\r\nexport default counterSlice.reducer;\r\n","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { decrement, increment, incrementByAmount, incrementAsync, selectCount } from './counterSlice';\r\nimport styles from './Counter.module.css';\r\n\r\nexport function Counter(): JSX.Element {\r\n  const count = useSelector(selectCount);\r\n  const dispatch = useDispatch();\r\n  const [incrementAmount, setIncrementAmount] = useState('2');\r\n\r\n  return (\r\n    <div>\r\n      <div className={styles.row}>\r\n        <button\r\n          type=\"button\"\r\n          className={styles.button}\r\n          aria-label=\"Increment value\"\r\n          onClick={() => dispatch(increment())}\r\n        >\r\n          +\r\n        </button>\r\n        <span className={styles.value}>{count}</span>\r\n        <button\r\n          type=\"button\"\r\n          className={styles.button}\r\n          aria-label=\"Decrement value\"\r\n          onClick={() => dispatch(decrement())}\r\n        >\r\n          -\r\n        </button>\r\n      </div>\r\n      <div className={styles.row}>\r\n        <input\r\n          className={styles.textbox}\r\n          aria-label=\"Set increment amount\"\r\n          value={incrementAmount}\r\n          onChange={(e) => setIncrementAmount(e.target.value)}\r\n        />\r\n        <button\r\n          type=\"button\"\r\n          className={styles.button}\r\n          onClick={() => dispatch(incrementByAmount(Number(incrementAmount) || 0))}\r\n        >\r\n          Add Amount\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className={styles.asyncButton}\r\n          onClick={() => dispatch(incrementAsync(Number(incrementAmount) || 0))}\r\n        >\r\n          Add Async\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nimport { RootState } from '../../app/store';\r\nimport { Status, EntityState, Word } from '../../types';\r\n\r\ntype WordsState = EntityState<Word[]>;\r\n\r\nconst initialState: WordsState = {\r\n  status: Status.Idle,\r\n  data: null,\r\n  error: undefined,\r\n};\r\n\r\nexport const fetchWords = createAsyncThunk(\r\n  'words/fetchWords',\r\n  async ({ group = 0, page = 0 }: { group?: number; page?: number } = {}) => {\r\n    const response = await axios.get('/words', {\r\n      params: {\r\n        group,\r\n        page,\r\n      },\r\n    });\r\n    return response.data;\r\n  },\r\n);\r\n\r\nexport const wordsSlice = createSlice({\r\n  name: 'words',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchWords.pending, (state) => {\r\n      state.status = Status.Loading;\r\n    });\r\n    builder.addCase(fetchWords.fulfilled, (state, { payload }) => {\r\n      state.status = Status.Succeeded;\r\n      state.data = payload;\r\n    });\r\n    builder.addCase(fetchWords.rejected, (state, { error }) => {\r\n      state.status = Status.Failed;\r\n      state.error = error.message;\r\n    });\r\n  },\r\n});\r\n\r\nexport function selectWordsStatus(state: RootState): WordsState['status'] {\r\n  return state.words.status;\r\n}\r\n\r\nexport function selectWordsError(state: RootState): WordsState['error'] {\r\n  return state.words.error;\r\n}\r\n\r\nexport function selectWordsData(state: RootState): WordsState['data'] {\r\n  return state.words.data;\r\n}\r\n\r\nexport default wordsSlice.reducer;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { fetchWords, selectWordsStatus, selectWordsData, selectWordsError } from './wordsSlice';\r\nimport { Status } from '../../types';\r\n\r\nexport function Words(): JSX.Element {\r\n  const dispatch = useDispatch();\r\n  const wordsStatus = useSelector(selectWordsStatus);\r\n  const wordsData = useSelector(selectWordsData);\r\n  const wordsError = useSelector(selectWordsError);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchWords());\r\n  }, [dispatch, fetchWords]);\r\n\r\n  let content = null;\r\n  switch (wordsStatus) {\r\n    case Status.Idle:\r\n    case Status.Loading: {\r\n      content = 'Loading';\r\n      break;\r\n    }\r\n\r\n    case Status.Succeeded: {\r\n      if (wordsData) {\r\n        const wordFields = wordsData.reduce(\r\n          (wordsAcc: JSX.Element[], wordData) => [\r\n            ...wordsAcc,\r\n            <hr key={`${wordData.id}j`} />,\r\n            <pre key={wordData.id}>{JSON.stringify(wordData, null, 2)}</pre>,\r\n          ],\r\n          [],\r\n        );\r\n        content = <div style={{ textAlign: 'left' }}>{wordFields}</div>;\r\n      }\r\n      break;\r\n    }\r\n\r\n    case Status.Failed: {\r\n      if (wordsError) {\r\n        content = <p>Error: {wordsError}</p>;\r\n      }\r\n      break;\r\n    }\r\n\r\n    default: {\r\n      throw new Error('Unmatched case');\r\n    }\r\n  }\r\n\r\n  return <div>{content}</div>;\r\n}\r\n","import React, { useState, useEffect, SyntheticEvent } from 'react';\r\nimport { Alert, Button, Form } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport { useDispatch } from 'react-redux';\r\nimport InlineSpinner from '../../InlineSpinner';\r\nimport { setAuthData } from '../../../features/auth/authSlice';\r\n\r\nenum FieldName {\r\n  Email = 'email',\r\n  Password = 'password',\r\n}\r\n\r\ninterface Props {\r\n  closeAuthModal: () => void;\r\n}\r\n\r\nexport default function LoginForm(props: Props): JSX.Element {\r\n  const { closeAuthModal } = props;\r\n  const [isSubmittable, setIsSubmittable] = useState(true);\r\n  const [isLoginSuccessful, setIsLoginSuccessful] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  async function handleSubmit(e: SyntheticEvent) {\r\n    e.preventDefault();\r\n    const form = e.target as HTMLFormElement;\r\n    const hasEmpty = Object.values(FieldName).some((key) => form[key].value.length < 1);\r\n    if (!hasEmpty) {\r\n      try {\r\n        setIsSubmittable(false);\r\n        const loginRes = await axios.post(\r\n          '/signin',\r\n          Object.values(FieldName).reduce((acc, fieldName) => ({ ...acc, [fieldName]: form[fieldName].value }), {}),\r\n        );\r\n        if (!loginRes?.data) {\r\n          throw new Error('Авторизация не удалась');\r\n        }\r\n        dispatch(setAuthData(loginRes.data));\r\n        setIsLoginSuccessful(true);\r\n      } catch (err) {\r\n        // eslint-disable-next-line no-alert\r\n        window.alert(err.message);\r\n        setIsLoginSuccessful(false);\r\n      } finally {\r\n        setIsSubmittable(true);\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isLoginSuccessful) {\r\n      setTimeout(() => {\r\n        closeAuthModal();\r\n      }, 2000);\r\n    }\r\n  }, [closeAuthModal, isLoginSuccessful, dispatch]);\r\n\r\n  let content;\r\n  if (isLoginSuccessful) {\r\n    content = (\r\n      <div>\r\n        <br />\r\n        <Alert variant=\"success\">Авторизован</Alert>\r\n      </div>\r\n    );\r\n  } else {\r\n    content = (\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group>\r\n          <Form.Label>Адрес электронной почты</Form.Label>\r\n          <Form.Control type=\"text\" placeholder=\"vasily@mail.ru\" name={FieldName.Email} />\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label>Пароль</Form.Label>\r\n          <Form.Control type=\"password\" placeholder=\"vasily123\" name={FieldName.Password} />\r\n        </Form.Group>\r\n        <Button disabled={!isSubmittable} variant=\"primary\" type=\"submit\">\r\n          {!isSubmittable && <InlineSpinner />}\r\n          &nbsp; Войти\r\n        </Button>\r\n      </Form>\r\n    );\r\n  }\r\n\r\n  return content;\r\n}\r\n","export default __webpack_public_path__ + \"static/media/statistics.1e9123e7.png\";","import React from 'react';\r\nimport { BarChart, Bar, XAxis, Cell, ResponsiveContainer, LabelList } from 'recharts';\r\nimport { games } from '../../constants/games';\r\nimport { BarChartDataItem } from '../../features/statistics/statisticsSlice';\r\n\r\nconst barColors = {\r\n  [games[0].nameRU]: '#fdff95',\r\n  [games[1].nameRU]: '#b5ffb4',\r\n  [games[2].nameRU]: '#a6fff5',\r\n  [games[3].nameRU]: '#ffb5d8',\r\n};\r\nconst margin = { top: 40, right: 30, left: 20, bottom: 90 };\r\n\r\ntype PropsType = {\r\n  chartData: Array<BarChartDataItem>;\r\n};\r\n\r\nconst StatisticsBarChart = ({ chartData }: PropsType): JSX.Element => (\r\n  <ResponsiveContainer width=\"100%\" height={250}>\r\n    <BarChart data={chartData} margin={margin}>\r\n      <XAxis dataKey=\"name\" stroke=\"#000000\" interval={0} />\r\n      <Bar dataKey=\"value\" barSize={30} fill=\"#8884d8\" stroke=\"#000000\" strokeWidth={1}>\r\n        <LabelList dataKey=\"label\" position=\"top\" fill=\"#000000\" />\r\n        {chartData.map((item) => (\r\n          <Cell key={`cell-${item.name}`} fill={barColors[item.name]} />\r\n        ))}\r\n      </Bar>\r\n    </BarChart>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default StatisticsBarChart;\r\n","import React from 'react';\r\nimport { ResponsiveContainer, LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, Brush } from 'recharts';\r\nimport { LineChartDataItem } from '../../features/statistics/statisticsSlice';\r\n\r\ntype PropsType = {\r\n  chartData: Array<LineChartDataItem>;\r\n};\r\n\r\nconst margin = { top: 5, right: 5, left: 5, bottom: 0 };\r\nconst wrapper = {\r\n  border: '1px solid #ccc',\r\n  background: '#fff',\r\n  padding: '0.5rem 0.5rem 0',\r\n};\r\n\r\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\r\nconst CustomTooltip = ({ active, payload, label }: any) => {\r\n  if (active && payload && payload.length) {\r\n    return (\r\n      <div className=\"custom-tooltip\">\r\n        <p className=\"label\">{`${label}`}</p>\r\n        <p className=\"label\">{`слов: ${payload[0].value}`}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nconst StatisticsLineChart = ({ chartData }: PropsType): JSX.Element => (\r\n  <ResponsiveContainer width=\"100%\" height={250}>\r\n    <LineChart data={chartData} margin={margin}>\r\n      <Line type=\"monotone\" dataKey=\"value\" stroke=\"#e06460\" />\r\n      <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\r\n      <XAxis dataKey=\"date\" minTickGap={30} interval=\"preserveStartEnd\" />\r\n      <YAxis hide />\r\n      <Tooltip content={<CustomTooltip />} wrapperStyle={wrapper} />\r\n      <Brush dataKey=\"date\" height={25} />\r\n    </LineChart>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default StatisticsLineChart;\r\n","export const getNoun = (count: number, one: string, few: string, many: string): string => {\r\n  let n = Math.abs(count);\r\n  n %= 100;\r\n  if (n >= 5 && n <= 20) {\r\n    return `${count} ${many}`;\r\n  }\r\n  n %= 10;\r\n  if (n === 1) {\r\n    return `${count} ${one}`;\r\n  }\r\n  if (n >= 2 && n <= 4) {\r\n    return `${count} ${few}`;\r\n  }\r\n  return `${count} ${many}`;\r\n};\r\n","import axios from 'axios';\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { AppThunk, RootState } from '../../app/store';\r\nimport { getNoun } from '../../utils/getNoun';\r\nimport { getUniqueArray } from '../../utils/getUniqueArray';\r\n\r\nexport interface BarChartDataItem {\r\n  name: string;\r\n  value: number;\r\n  label: string;\r\n}\r\n\r\nexport interface LineChartDataItem {\r\n  date: string;\r\n  value: number;\r\n}\r\n\r\ninterface StatisticsState {\r\n  learnedWords: Array<BarChartDataItem>;\r\n  correctAnswers: Array<BarChartDataItem>;\r\n  seriesCorrectAnswers: Array<BarChartDataItem>;\r\n  isLoading: boolean;\r\n  wordsPerDayArr: Array<LineChartDataItem>;\r\n  increaseWordsPerDayArr: Array<LineChartDataItem>;\r\n}\r\n\r\nexport interface DataItem {\r\n  name: string;\r\n  words: Array<string>;\r\n  countCorrectAnswers: number;\r\n  longestSeriesCorrectAnswers: number;\r\n}\r\nexport interface Data {\r\n  date: string;\r\n  data: Array<DataItem>;\r\n}\r\n\r\nconst initialState: StatisticsState = {\r\n  learnedWords: [],\r\n  correctAnswers: [],\r\n  seriesCorrectAnswers: [],\r\n  isLoading: false,\r\n  wordsPerDayArr: [],\r\n  increaseWordsPerDayArr: [],\r\n};\r\n\r\nexport const statisticsSlice = createSlice({\r\n  name: 'statistics',\r\n  initialState,\r\n  reducers: {\r\n    // eslint-disable-next-line @typescript-eslint/ban-types\r\n    setLongTermStatistics: (state, action: PayloadAction<object>) => {\r\n      const data = action.payload;\r\n      // const data = { '10 апреля': 5, '11 апреля': 15, '13 апреля': 6 };\r\n      // устанавливаем wordsPerDayArr\r\n      const wordsPerDay = Object.keys(data).map((key) => ({\r\n        date: key,\r\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n        // @ts-ignore\r\n        value: data[key],\r\n      }));\r\n      state.wordsPerDayArr = wordsPerDay;\r\n      // устанавливаем increaseWordsPerDayArr\r\n      let sum = 0;\r\n      const increaseWordsPerDay = wordsPerDay.map((item) => {\r\n        sum += item.value;\r\n        return { date: item.date, value: sum };\r\n      });\r\n      state.increaseWordsPerDayArr = increaseWordsPerDay;\r\n    },\r\n    setIsLoading: (state, action: PayloadAction<boolean>) => {\r\n      state.isLoading = action.payload;\r\n    },\r\n    setStatistics: (state, action: PayloadAction<Data>) => {\r\n      const dataFromLocalStorage = action.payload;\r\n      // устанавливаем learnedWords\r\n      const learnedWordsArr = dataFromLocalStorage.data.map((item) => ({\r\n        name: item.name,\r\n        value: item.words.length,\r\n        label: getNoun(item.words.length, 'слово', 'слова', 'слов'),\r\n      }));\r\n      const allLearnedWords = dataFromLocalStorage.data.map((item) => item.words).flat();\r\n      const learnedWords = getUniqueArray(allLearnedWords);\r\n      learnedWordsArr.push({\r\n        name: 'Общее кол-во',\r\n        value: learnedWords.length,\r\n        label: getNoun(learnedWords.length, 'слово', 'слова', 'слов'),\r\n      });\r\n      state.learnedWords = learnedWordsArr;\r\n      // устанавливаем correctAnswers\r\n      const correctAnswersArr = dataFromLocalStorage.data.map((item) => {\r\n        const percent = Math.round((item.countCorrectAnswers * 100) / item.words.length);\r\n        return { name: item.name, value: percent, label: `${percent}%` };\r\n      });\r\n      const sumAllPercents = correctAnswersArr.reduce((res, item) => {\r\n        // eslint-disable-next-line no-param-reassign\r\n        res += item.value;\r\n        return res;\r\n      }, 0);\r\n      const gamesCount = dataFromLocalStorage.data.length;\r\n      const commonPercent = Math.round(sumAllPercents / gamesCount);\r\n      correctAnswersArr.push({\r\n        name: 'Общий %',\r\n        value: commonPercent,\r\n        label: `${commonPercent}%`,\r\n      });\r\n      state.correctAnswers = correctAnswersArr;\r\n      // устанавливаем seriesCorrectAnswers\r\n      state.seriesCorrectAnswers = dataFromLocalStorage.data.map((item) => ({\r\n        name: item.name,\r\n        value: item.longestSeriesCorrectAnswers,\r\n        label: getNoun(item.longestSeriesCorrectAnswers, 'ответ', 'ответа', 'ответов'),\r\n      }));\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setStatistics, setIsLoading, setLongTermStatistics } = statisticsSlice.actions;\r\n\r\nexport const fetchStatistics = (userId: string): AppThunk => async (dispatch) => {\r\n  dispatch(setIsLoading(true));\r\n  try {\r\n    const { data } = await axios.get(`/users/${userId}/statistics`);\r\n    dispatch(setLongTermStatistics(data.optional.data));\r\n  } catch (error) {\r\n    // eslint-disable-next-line no-console\r\n    console.error(error);\r\n  }\r\n  dispatch(setIsLoading(false));\r\n};\r\n\r\nexport const learnedWords = (state: RootState): Array<BarChartDataItem> => state.statistics.learnedWords;\r\nexport const correctAnswers = (state: RootState): Array<BarChartDataItem> => state.statistics.correctAnswers;\r\nexport const seriesAnswers = (state: RootState): Array<BarChartDataItem> => state.statistics.seriesCorrectAnswers;\r\nexport const isLoading = (state: RootState): boolean => state.statistics.isLoading;\r\nexport const wordsPerDayArr = (state: RootState): Array<LineChartDataItem> => state.statistics.wordsPerDayArr;\r\nexport const increaseWordsPerDayArr = (state: RootState): Array<LineChartDataItem> =>\r\n  state.statistics.increaseWordsPerDayArr;\r\n\r\nexport default statisticsSlice.reducer;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Container from 'react-bootstrap/Container';\r\nimport statisticsImg from '../../assets/statistics.png';\r\nimport styles from './statistics.module.css';\r\nimport StatisticsBarChart from '../../components/StatisticsBarChart/StatisticsBarChart';\r\nimport StatisticsLineChart from '../../components/StatisticsLineChart/StatisticsLineChart';\r\nimport { getDayAndMonth } from '../../utils/getDayAndMonth';\r\nimport {\r\n  learnedWords,\r\n  setStatistics,\r\n  correctAnswers,\r\n  seriesAnswers,\r\n  isLoading,\r\n  fetchStatistics,\r\n  wordsPerDayArr,\r\n  increaseWordsPerDayArr,\r\n} from '../../features/statistics/statisticsSlice';\r\nimport { Status, StorageKey } from '../../types';\r\nimport { selectAuthData, selectAuthStatus } from '../../features/auth/authSlice';\r\nimport InlineSpinner from '../../components/InlineSpinner';\r\n\r\nconst Statistics = (): JSX.Element => {\r\n  const authData = useSelector(selectAuthData);\r\n  const authStatus = useSelector(selectAuthStatus);\r\n  const learnedWordsData = useSelector(learnedWords);\r\n  const correctAnswersData = useSelector(correctAnswers);\r\n  const seriesCorrectAnswersData = useSelector(seriesAnswers);\r\n  const isDataLoading = useSelector(isLoading);\r\n  const allLearnedWords = useSelector(wordsPerDayArr);\r\n  const increaseLearnedWords = useSelector(increaseWordsPerDayArr);\r\n\r\n  const dispatch = useDispatch();\r\n  React.useEffect(() => {\r\n    const today = getDayAndMonth();\r\n    const serializedStatistics = localStorage.getItem(StorageKey.Statistics);\r\n    if (serializedStatistics) {\r\n      try {\r\n        const statistics = JSON.parse(serializedStatistics);\r\n        if (statistics.date === today) {\r\n          dispatch(setStatistics(statistics));\r\n        } else {\r\n          localStorage.removeItem(StorageKey.Statistics);\r\n        }\r\n      } catch (e) {\r\n        /* eslint-disable-next-line no-console */\r\n        console.error(e);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    if (authStatus === Status.Authorized && authData) {\r\n      const { userId } = authData;\r\n      dispatch(fetchStatistics(userId));\r\n    }\r\n  }, [authStatus]);\r\n\r\n  return (\r\n    <div>\r\n      <Container fluid>\r\n        <h4>Статистика</h4>\r\n        <img className={styles.statisticsImg} src={statisticsImg} alt=\"Ученики и графики\" />\r\n        <hr className={styles.color} />\r\n        {learnedWordsData.length > 0 && (\r\n          <>\r\n            <h5 className={styles.margin}>Количество слов, изученных сегодня </h5>\r\n            <div className={styles.container}>\r\n              <StatisticsBarChart chartData={learnedWordsData} />\r\n            </div>\r\n\r\n            <hr className={styles.first} />\r\n            <h5 className={styles.margin}>Процент правильных ответов в играх</h5>\r\n            <div className={styles.container}>\r\n              <StatisticsBarChart chartData={correctAnswersData} />\r\n            </div>\r\n\r\n            <hr className={styles.color} />\r\n            <h5 className={styles.margin}>Самая длинная серия правильных ответов в каждой игре</h5>\r\n            <div className={styles.container}>\r\n              <StatisticsBarChart chartData={seriesCorrectAnswersData} />\r\n            </div>\r\n          </>\r\n        )}\r\n        {learnedWordsData.length === 0 && (\r\n          <>\r\n            <h5 className={styles.margin}>Пока не сыграешь в игру, статистика не отобразится :). </h5>\r\n            <h5>PS: Статистика ведётся, только если игра была открыта из учебника. </h5>\r\n            <h5>PSS: Долгосрочную статистику могут видеть только зарегистрированные пользователи. </h5>\r\n          </>\r\n        )}\r\n        {!isDataLoading && (\r\n          <>\r\n            {allLearnedWords.length > 0 && (\r\n              <>\r\n                <hr className={styles.color} />\r\n                <h5 className={styles.margin}>Количество изученных слов за весь период обучения по дням</h5>\r\n                <div className={styles.container}>\r\n                  <StatisticsLineChart chartData={allLearnedWords} />\r\n                </div>\r\n              </>\r\n            )}\r\n            {increaseLearnedWords.length > 0 && (\r\n              <>\r\n                <h5 className={styles.margin}>\r\n                  Увеличение общего количества изученных слов за весь период обучения по дням\r\n                </h5>\r\n                <div className={styles.container}>\r\n                  <StatisticsLineChart chartData={increaseLearnedWords} />\r\n                </div>\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n        {isDataLoading && <InlineSpinner size=\".8rem\" />}\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n","export default __webpack_public_path__ + \"static/media/dictionary.25d26300.png\";","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Container from 'react-bootstrap/Container';\r\nimport { COLORS } from '../../constants/textbook';\r\n\r\nimport './dictionarySection.scss';\r\n\r\ntype PropsType = {\r\n  url: string;\r\n  text: string;\r\n};\r\n\r\nconst DictionarySection = ({ url, text }: PropsType): JSX.Element => {\r\n  const groupCards = COLORS.map((color, index) => (\r\n    <NavLink to={`/dictionary/${url}/groups/${index}`} className={color} key={color}>\r\n      <h3 className=\"groupTitle\">Уровень сложности {index}</h3>\r\n    </NavLink>\r\n  ));\r\n\r\n  return (\r\n    <div>\r\n      <h5 className=\"margin\">{text}</h5>\r\n      <Container>\r\n        <div className=\"groups\">{groupCards}</div>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DictionarySection;\r\n","import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport dictionaryImg from '../../assets/dictionary.png';\r\nimport styles from './dictionary.module.css';\r\nimport DictionarySection from '../../components/DictionarySection/DictionarySection';\r\n\r\nconst Dictionary = (): JSX.Element => (\r\n  <Container fluid>\r\n    <h4>Словарь</h4>\r\n    <img className={styles.dictionaryImg} src={dictionaryImg} alt=\"Ученики и словарь\" />\r\n    <hr className={styles.color} />\r\n    <DictionarySection url=\"difficult\" text=\"Сложные слова\" />\r\n    <hr className={styles.color} />\r\n    <DictionarySection url=\"deleted\" text=\"Удалённые слова\" />\r\n  </Container>\r\n);\r\n\r\nexport default Dictionary;\r\n","import React, { useState, useEffect, SyntheticEvent } from 'react';\r\nimport { Button, Form, Image, Badge } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport { useDispatch } from 'react-redux';\r\nimport InlineSpinner from '../../InlineSpinner';\r\n\r\nenum FieldName {\r\n  Username = 'username',\r\n  Email = 'email',\r\n  Password = 'password',\r\n  PasswordConfirm = 'password_confirm',\r\n  Photo = 'photo',\r\n}\r\n\r\ninterface SubmittedData {\r\n  email: string;\r\n  photo_url: string;\r\n}\r\n\r\ninterface Props {\r\n  openLogin: () => void;\r\n}\r\n\r\nexport default function RegisterForm(props: Props): JSX.Element {\r\n  const { openLogin } = props;\r\n  const dispatch = useDispatch();\r\n\r\n  const [validated, setValidated] = useState(false);\r\n  const [submittable, setSubmittable] = useState(true);\r\n  const [submittedData, setSubmittedData] = useState<SubmittedData | null>(null);\r\n\r\n  async function handleSubmit(e: SyntheticEvent) {\r\n    e.preventDefault();\r\n    const form = e.target as HTMLFormElement;\r\n    if (!form.checkValidity()) {\r\n      e.stopPropagation();\r\n      setValidated(true);\r\n      return;\r\n    }\r\n    setValidated(true);\r\n    const photoField = form[FieldName.Photo];\r\n    if (photoField.files.length) {\r\n      try {\r\n        setSubmittable(false);\r\n        const hasEmpty = Object.values(FieldName).some((key) => key !== FieldName.Photo && form[key].value.length < 1);\r\n        if (!hasEmpty) {\r\n          if (form[FieldName.Password].value !== form[FieldName.PasswordConfirm].value) {\r\n            // eslint-disable-next-line no-alert\r\n            window.alert('Пароли не соответствуют');\r\n            return;\r\n          }\r\n          const uploadFile = photoField.files[0];\r\n          const formData = new FormData();\r\n          formData.append('file', uploadFile);\r\n          const photoRes = await axios.post('/upload', formData);\r\n          const { path } = photoRes.data;\r\n          const registerRes = await axios.post('/users', {\r\n            ...Object.values(FieldName).reduce((acc, fieldName) => {\r\n              if (fieldName === FieldName.Photo) {\r\n                return acc;\r\n              }\r\n              return { ...acc, [fieldName]: form[fieldName].value };\r\n            }, {}),\r\n            photo_url: path,\r\n          });\r\n          setSubmittedData(registerRes.data);\r\n        }\r\n      } catch (err) {\r\n        setSubmittedData(null);\r\n      } finally {\r\n        setSubmittable(true);\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (submittedData) {\r\n      setTimeout(() => openLogin(), 3000);\r\n    }\r\n  }, [openLogin, submittedData, dispatch]);\r\n\r\n  let content;\r\n  if (submittedData) {\r\n    content = (\r\n      <div>\r\n        <h4>\r\n          <Badge variant=\"success\">Зарегистрировано</Badge>\r\n          &nbsp;{submittedData.email}\r\n        </h4>\r\n        <Image src={submittedData.photo_url} rounded />\r\n      </div>\r\n    );\r\n  } else {\r\n    content = (\r\n      <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n        <Form.Group>\r\n          <Form.Label>Имя пользователя</Form.Label>\r\n          <Form.Control required type=\"text\" placeholder=\"Имя пользователя\" name={FieldName.Username} />\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label>Адрес электронной почты</Form.Label>\r\n          <Form.Control required type=\"email\" placeholder=\"vasily@mail.ru\" name={FieldName.Email} />\r\n          <Form.Text className=\"text-muted\">Электронный адрес должен быть уникальным в системе</Form.Text>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label>Пароль</Form.Label>\r\n          <Form.Control required pattern=\".{8,}\" type=\"password\" placeholder=\"Пароль\" name={FieldName.Password} />\r\n          <Form.Text className=\"text-muted\">Пароль должен содержать не менее 8 символов без пробелов</Form.Text>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label>Повторите пароль</Form.Label>\r\n          <Form.Control\r\n            required\r\n            pattern=\".{8,}\"\r\n            type=\"password\"\r\n            placeholder=\"Повторите пароль\"\r\n            name={FieldName.PasswordConfirm}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label>Загрузить аватар</Form.Label>\r\n          <Form.Control required type=\"file\" placeholder=\"Аватар d\" name={FieldName.Photo} />\r\n          <Form.Text className=\"text-danger\">Все поля, включая аватар, обязательны для заполнения</Form.Text>\r\n        </Form.Group>\r\n\r\n        <Button disabled={!submittable} variant=\"primary\" type=\"submit\">\r\n          {!submittable && <InlineSpinner />} &nbsp; Зарегистрироваться\r\n        </Button>\r\n      </Form>\r\n    );\r\n  }\r\n\r\n  return content;\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Modal, Tabs, Tab } from 'react-bootstrap';\r\nimport LoginForm from './components/LoginForm';\r\nimport RegisterForm from './components/RegisterForm';\r\n\r\nconst { Title, Header, Body } = Modal;\r\n\r\nconst TAB_NAMES = {\r\n  LOGIN: 'login',\r\n  REGISTER: 'register',\r\n};\r\n\r\ninterface Props {\r\n  show: boolean;\r\n  closeAuthModal: () => void;\r\n}\r\n\r\nexport default function AuthModal(props: Props): JSX.Element {\r\n  const { show, closeAuthModal } = props;\r\n  const [currentTab, setCurrentTab] = useState(TAB_NAMES.LOGIN);\r\n\r\n  const openLogin = () => setCurrentTab(TAB_NAMES.LOGIN);\r\n\r\n  return (\r\n    <Modal show={show} onHide={closeAuthModal}>\r\n      <Header closeButton>\r\n        <Title>Войти</Title>\r\n      </Header>\r\n      <Body>\r\n        <Tabs defaultActiveKey={TAB_NAMES.LOGIN} activeKey={currentTab} onSelect={(k) => k && setCurrentTab(k)}>\r\n          <Tab eventKey={TAB_NAMES.LOGIN} title=\"Войти\">\r\n            <LoginForm closeAuthModal={closeAuthModal} />\r\n          </Tab>\r\n          <Tab eventKey={TAB_NAMES.REGISTER} title=\"Регистрация\">\r\n            <RegisterForm openLogin={openLogin} />\r\n          </Tab>\r\n        </Tabs>\r\n      </Body>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Switch, Route, useLocation } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nimport Header from './components/Header/Header';\r\nimport Footer from './components/Footer/Footer';\r\nimport Main from './pages/Main/Main';\r\nimport PreStartInfo from './components/PreStartInfo/PreStartInfo';\r\nimport About from './pages/About/About';\r\nimport NotFound from './pages/NotFound/NotFound';\r\nimport Textbook from './pages/Textbook';\r\nimport Group from './pages/Group';\r\nimport { Counter } from './features/counter/Counter';\r\nimport { Words } from './features/words/Words';\r\nimport './App.css';\r\nimport { selectAuthData, selectAuthStatus, setAuthData, setAuthorizedStatus } from './features/auth/authSlice';\r\nimport { TOKEN_EXPIRE_TIME } from './constants/tokenExpireTime';\r\nimport { StorageKey, Status } from './types';\r\nimport Games from './pages/Games/Games';\r\nimport { wrongAnswers, correctAnswers } from './features/game/gameSlice';\r\nimport Statistics from './pages/Statistics/Statistics';\r\nimport Dictionary from './pages/Dictionary/Dictionary';\r\nimport AuthModal from './components/AuthModal';\r\nimport { fetchSettings } from './features/settings/settingsSlice';\r\n\r\nconst App = (): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n  const authData = useSelector(selectAuthData);\r\n  const authStatus = useSelector(selectAuthStatus);\r\n  const [authShown, setAuthShown] = useState(false);\r\n  const openAuthModal = () => setAuthShown(true);\r\n  const closeAuthModal = () => setAuthShown(false);\r\n  const correctlyAnsweredWords = useSelector(correctAnswers);\r\n  const wronglyAnsweredWords = useSelector(wrongAnswers);\r\n\r\n  useEffect(() => {\r\n    let isTokenExpired = true;\r\n    const serializedAuthTime = localStorage.getItem(StorageKey.AuthTime);\r\n    if (serializedAuthTime) {\r\n      const authTime = Number(serializedAuthTime);\r\n      const currentTime = new Date().getTime();\r\n      const expiredTime = currentTime - authTime;\r\n      isTokenExpired = expiredTime >= TOKEN_EXPIRE_TIME;\r\n    }\r\n    const serializedAuthData = localStorage.getItem(StorageKey.Auth);\r\n    if (serializedAuthData && !isTokenExpired) {\r\n      try {\r\n        const storedAuthData = JSON.parse(serializedAuthData);\r\n        dispatch(setAuthData(storedAuthData));\r\n      } catch (e) {\r\n        /* eslint-disable-next-line no-console */\r\n        console.error(e);\r\n        dispatch(setAuthData(null));\r\n      }\r\n    } else {\r\n      localStorage.removeItem(StorageKey.AuthTime);\r\n      localStorage.removeItem(StorageKey.Auth);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const storedAuth = localStorage.getItem(StorageKey.Auth);\r\n    if (!storedAuth && authData) {\r\n      const currentTime = new Date().getTime();\r\n      localStorage.setItem(StorageKey.AuthTime, String(currentTime));\r\n      localStorage.setItem(StorageKey.Auth, JSON.stringify(authData));\r\n    }\r\n  }, [authData]);\r\n\r\n  useEffect(() => {\r\n    if (authData && authData.token) {\r\n      axios.defaults.headers.common.Authorization = `Bearer ${authData.token}`;\r\n      dispatch(setAuthorizedStatus());\r\n    }\r\n  }, [authData]);\r\n\r\n  useEffect(() => {\r\n    if (authStatus === Status.Authorized && authData?.userId) {\r\n      dispatch(fetchSettings());\r\n    }\r\n  }, [authStatus]);\r\n\r\n  useEffect(() => {\r\n    async function run() {\r\n      if (authData?.userId && correctlyAnsweredWords.length) {\r\n        const lastWord = correctlyAnsweredWords[correctlyAnsweredWords.length - 1];\r\n        const path = `/users/${authData.userId}/words/${lastWord.id}`;\r\n        try {\r\n          const res = await axios.get(path);\r\n          await axios.put(path, {\r\n            ...res.data,\r\n            optional: {\r\n              correct: (res.data?.optional?.correct || 0) + 1,\r\n            },\r\n          });\r\n        } catch (e) {\r\n          if (e.response.status === 404) {\r\n            await axios.post(path, {\r\n              optional: {\r\n                correct: 1,\r\n              },\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n    run();\r\n  }, [correctlyAnsweredWords.length]);\r\n\r\n  useEffect(() => {\r\n    async function run() {\r\n      if (authData?.userId && wronglyAnsweredWords.length) {\r\n        const lastWord = wronglyAnsweredWords[wronglyAnsweredWords.length - 1];\r\n        const path = `/users/${authData.userId}/words/${lastWord.id}`;\r\n        try {\r\n          const res = await axios.get(path);\r\n          await axios.put(path, {\r\n            ...res.data,\r\n            repeat: true,\r\n            optional: {\r\n              incorrect: (res.data?.optional?.incorrect || 0) + 1,\r\n            },\r\n          });\r\n        } catch (e) {\r\n          if (e.response.status === 404) {\r\n            await axios.post(path, {\r\n              repeat: true,\r\n              optional: {\r\n                incorrect: 1,\r\n              },\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n    run();\r\n  }, [wronglyAnsweredWords.length]);\r\n\r\n  const { pathname } = useLocation();\r\n  const isGamePlaying = pathname.includes('prestart');\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {!isGamePlaying && <Header openAuthModal={openAuthModal} />}\r\n      <main>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Main} />\r\n          <Route exact path=\"/about\" component={About} />\r\n          <Route exact path=\"/counter\" component={Counter} />\r\n          <Route exact path=\"/words\" component={Words} />\r\n          <Route exact path=\"/games\" component={Games} />\r\n          <Route exact path=\"/textbook\" component={Textbook} />\r\n          <Route exact path=\"/groups/:groupId\" component={Group} />\r\n          <Route exact path=\"/statistics\" component={Statistics} />\r\n          <Route exact path=\"/prestart\" component={PreStartInfo} />\r\n          <Route exact path=\"/dictionary\" component={Dictionary} />\r\n          <Route exact path=\"/dictionary/:type/groups/:groupId\" component={Group} />\r\n          <Route path=\"*\" component={NotFound} />\r\n        </Switch>\r\n      </main>\r\n      <AuthModal show={authShown} closeAuthModal={closeAuthModal} />\r\n      {!isGamePlaying && <Footer />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","export const TOKEN_EXPIRE_TIME = 4 * 60 * 60 * 1000;\r\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\r\nimport counterReducer from '../features/counter/counterSlice';\r\nimport wordsReducer from '../features/words/wordsSlice';\r\nimport authReducer from '../features/auth/authSlice';\r\nimport gamesReducer from '../features/games/gamesSlice';\r\nimport gameReducer from '../features/game/gameSlice';\r\nimport statisticsReducer from '../features/statistics/statisticsSlice';\r\nimport settingsReducer from '../features/settings/settingsSlice';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    counter: counterReducer,\r\n    words: wordsReducer,\r\n    auth: authReducer,\r\n    games: gamesReducer,\r\n    game: gameReducer,\r\n    statistics: statisticsReducer,\r\n    settings: settingsReducer,\r\n  },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, RootState, unknown, Action<string>>;\r\n","/* eslint-disable @typescript-eslint/no-use-before-define */\r\n/* eslint-disable no-console */\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config): void | undefined {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister(): void {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst ScrollToTop = (): null => {\r\n  const { pathname } = useLocation();\r\n\r\n  React.useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n};\r\nexport default ScrollToTop;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { store } from './app/store';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport ScrollToTop from './components/ScrollToTop/ScrollToTop';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_BASE_URL;\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <HashRouter>\r\n      <ScrollToTop />\r\n      <App />\r\n    </HashRouter>\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"header_container__Iqti8\",\"left\":\"header_left__3G_9q\",\"right\":\"header_right__y-YFL\",\"logo\":\"header_logo__3u9u6\",\"img\":\"header_img__2AJ4c\",\"menuItems\":\"header_menuItems__2IOsl\",\"header_menu\":\"header_header_menu__1WQaW\",\"nav-item\":\"header_nav-item__-1NWd\",\"ok\":\"header_ok__3X8As\",\"no\":\"header_no__14wHz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Footer_img__3yw1v\",\"link\":\"Footer_link__2w-jU\",\"bold\":\"Footer_bold__3SL74\",\"flex\":\"Footer_flex__2Uv8l\",\"right\":\"Footer_right__15TQ_\",\"color\":\"Footer_color__2caNV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gameField\":\"AudioCallGame_gameField__3EVsC\",\"container\":\"AudioCallGame_container__2qUM5\",\"heightWordImg\":\"AudioCallGame_heightWordImg__1jMxv\",\"flex\":\"AudioCallGame_flex__1Psq0\",\"right\":\"AudioCallGame_right__bm8j6\",\"left\":\"AudioCallGame_left__2N97Y\",\"words\":\"AudioCallGame_words__3Rlf4\",\"img\":\"AudioCallGame_img__39tF7\",\"description\":\"AudioCallGame_description__3592n\",\"root\":\"AudioCallGame_root__2nE77\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gameField\":\"savannah_gameField__-NejO\",\"container\":\"savannah_container__1UbdV\",\"heightWordImg\":\"savannah_heightWordImg__3REVC\",\"flex\":\"savannah_flex__3mPzu\",\"right\":\"savannah_right__Sigxg\",\"left\":\"savannah_left__2rXT0\",\"words\":\"savannah_words__1Ufq3\",\"img\":\"savannah_img__g-NmB\",\"description\":\"savannah_description__xcvEG\",\"root\":\"savannah_root__2z5U4\",\"visualTimer\":\"savannah_visualTimer__2yRj1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gameField\":\"ourGame_gameField__2jtfv\",\"game\":\"ourGame_game__AGtrF\",\"container\":\"ourGame_container__7hSZH\",\"currentWord\":\"ourGame_currentWord__29UaD\",\"heightWordImg\":\"ourGame_heightWordImg__82Yif\",\"heightImg\":\"ourGame_heightImg__3KTJy\",\"flex\":\"ourGame_flex__325N2\",\"right\":\"ourGame_right__20DJU\",\"left\":\"ourGame_left__1xDXH\",\"words\":\"ourGame_words__21NSq\",\"img\":\"ourGame_img__3bTzg\",\"description\":\"ourGame_description__1OimF\",\"root\":\"ourGame_root__3oSOl\",\"wordCorrectly\":\"ourGame_wordCorrectly__14D_U\",\"wordNoCorrectly\":\"ourGame_wordNoCorrectly__240Cz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Counter_row__NY8Mu\",\"value\":\"Counter_value__1R5mb\",\"button\":\"Counter_button__yPCiT\",\"textbox\":\"Counter_textbox__1dObI\",\"asyncButton\":\"Counter_asyncButton__WuJfl Counter_button__yPCiT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"yellow\":\"GameHeader_yellow__2Xk0j\",\"green\":\"GameHeader_green__3jLIt\",\"blue\":\"GameHeader_blue__YXR5Q\",\"red\":\"GameHeader_red__9HU-A\",\"container\":\"GameHeader_container__27Evs\",\"left\":\"GameHeader_left__1xfQc\",\"right\":\"GameHeader_right__1AQn1\",\"center\":\"GameHeader_center__AAVkg\",\"img\":\"GameHeader_img__1j-aS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"green\":\"GameHeader_green__Gkl2z\",\"blue\":\"GameHeader_blue__266jf\",\"red\":\"GameHeader_red__1AKXH\",\"container\":\"GameHeader_container__2W3fi\",\"left\":\"GameHeader_left__1TJD3\",\"right\":\"GameHeader_right__1aL3P\",\"center\":\"GameHeader_center__3k0bU\",\"img\":\"GameHeader_img__2a6ka\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"preStartInfo_background__177e5\",\"container\":\"preStartInfo_container__3V_q3\",\"gameName\":\"preStartInfo_gameName__1Cxnf\",\"description\":\"preStartInfo_description__9P0Sm\",\"startBtn\":\"preStartInfo_startBtn__zFdg8\"};"],"sourceRoot":""}